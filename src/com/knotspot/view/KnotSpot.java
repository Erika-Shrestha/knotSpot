/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.knotspot.view;

import com.knotspot.controller.algorithms.BinarySearch;
import com.knotspot.util.ValidationUtil;
import com.knotspot.controller.algorithms.Sort;
import java.awt.CardLayout;
import javax.swing.ImageIcon;
import javax.swing.table.JTableHeader;
import java.awt.Font;
import java.awt.Color;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.SwingConstants;

import com.knotspot.model.VenueModel;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LMU ID: 23048598 COLLEGE ID: 230024 ErikaShrestha
 */
public class KnotSpot extends javax.swing.JFrame {

    private CardLayout cardLayout;
    private CardLayout cardLayoutForadminDashboard;
    private final String absolutePathForImage = "C:/Users/eerii\\OneDrive - islingtoncollege.edu.np\\CWs\\KnotSpot\\src\\com\\knotspot\\resource\\";

    private List<VenueModel> venueDetails;
    private DefaultTableModel defaultTableModel;

    /**
     * Creates new form knotSpotInterface sets the jFrame location to corner
     * calls the startProgress method to load the loading screen sets the value
     * of cell renderer and cell editor to column 8 (action) of the table type
     * casts the table to get the table model
     */
    public KnotSpot() {
        initComponents();
        this.setLocation(0, 0);
        startProgress();
        venueModifyTbl.getColumnModel().getColumn(8).setCellRenderer(new TableActionCellRenderer(rendererColumnPnl));
        venueModifyTbl.getColumnModel().getColumn(8).setCellEditor(new TableActionCellEditor(editColumnPnl));
        venueDetails = new LinkedList<>();
        defaultTableModel = (DefaultTableModel) venueModifyTbl.getModel();
        defaultInitializedTableData();
        displayTableOnHome(venueDetails);
        filterPopUpPnl.setVisible(false);
        getRootPane().setGlassPane(new JComponent() {
            @Override
            public void paintComponent(Graphics g) {
                g.setColor(new Color(0, 0, 0, 150));
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponents(g);
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editColumnPnl = new javax.swing.JPanel();
        editVenueDetailsBtn = new javax.swing.JButton();
        removeVenueDetailsBtn = new javax.swing.JButton();
        rendererColumnPnl = new javax.swing.JPanel();
        editVenueDetailsBtn2 = new javax.swing.JButton();
        removeVenueDetailsBtn2 = new javax.swing.JButton();
        popUpDialog = new javax.swing.JDialog();
        editInputPnl = new javax.swing.JPanel();
        venueIdOnPopUpMsgFld = new javax.swing.JTextField();
        venueContactOnPopUpMsgFld = new javax.swing.JTextField();
        inputVenueCapacitySlider1 = new javax.swing.JSlider();
        inputPerPlatePriceSlider1 = new javax.swing.JSlider();
        updateVenueDetailsBtn = new javax.swing.JButton();
        cancelVenueChangeBtn = new javax.swing.JButton();
        venueAddressOnPopUpMsgFld = new javax.swing.JTextField();
        inputVenueTypeComboBx1 = new javax.swing.JComboBox<>();
        inputVenueCityComboBx1 = new javax.swing.JComboBox<>();
        inputCapacityLbl = new javax.swing.JLabel();
        inputPerPlatePriceLbl = new javax.swing.JLabel();
        venueNameOnPopUpMsgFld = new javax.swing.JTextField();
        inputVenueNameErrorMsgLbl = new javax.swing.JLabel();
        inputVenueContactErrorMsgLbl = new javax.swing.JLabel();
        inputVenueAddressErrorMsgLbl = new javax.swing.JLabel();
        showCapacityValueLbl = new javax.swing.JLabel();
        showPerPlatePriceValueLbl = new javax.swing.JLabel();
        sortButtonGroup = new javax.swing.ButtonGroup();
        containerPnl = new javax.swing.JPanel();
        loadingPagePnl = new javax.swing.JPanel();
        sloganLbl = new javax.swing.JLabel();
        companyTitleLbl = new javax.swing.JLabel();
        firstPopUpImage = new javax.swing.JLabel();
        secondPopUpImage = new javax.swing.JLabel();
        thirdPopUpImage = new javax.swing.JLabel();
        fourthPopUpImage = new javax.swing.JLabel();
        fifthPopUpImage = new javax.swing.JLabel();
        loadingSymbolLbl = new javax.swing.JLabel();
        loadingValueLbl = new javax.swing.JLabel();
        loadingPagePrgBar = new javax.swing.JProgressBar();
        loadingPageBackgroundLbl = new javax.swing.JLabel();
        loginPagePnl = new javax.swing.JPanel();
        loginFormPnl = new javax.swing.JPanel();
        loginSideImgLbl = new javax.swing.JLabel();
        loginInfoContainerPnl = new javax.swing.JPanel();
        loginTitleLbl = new javax.swing.JLabel();
        usernameLbl = new javax.swing.JLabel();
        inputUsernameTxtFld = new javax.swing.JTextField();
        passwordLbl = new javax.swing.JLabel();
        inputPasswordPwdFld = new javax.swing.JPasswordField();
        loginBtn = new javax.swing.JButton();
        showPwdCheckBx = new javax.swing.JCheckBox();
        inputUsernameErrorLbl = new javax.swing.JLabel();
        inputPasswordErrorPwdLbl = new javax.swing.JLabel();
        forgotPwdLbl = new javax.swing.JLabel();
        lineOnePnl = new javax.swing.JPanel();
        lineTwoPnl = new javax.swing.JPanel();
        continueLbl = new javax.swing.JLabel();
        logInContinueAllIconLbl = new javax.swing.JLabel();
        adminDashboardPagePnl = new javax.swing.JPanel();
        navigationContainerPnl = new javax.swing.JPanel();
        adminDashboardPagesPnl = new javax.swing.JPanel();
        homePagePnl = new javax.swing.JPanel();
        recentDataScrollBr = new javax.swing.JScrollPane();
        frontDisplayTable = new javax.swing.JTable();
        displayRealTimeDataPnl = new javax.swing.JPanel();
        totalVenuePnl = new javax.swing.JPanel();
        totalVenueLbl = new javax.swing.JLabel();
        totalVenueNumberLbl = new javax.swing.JLabel();
        descriptionTotalVenueLbl = new javax.swing.JLabel();
        customerVisitsPnl = new javax.swing.JPanel();
        customerVisitLbl = new javax.swing.JLabel();
        customerVisitNumberLbl = new javax.swing.JLabel();
        descriptionCustomerVisitLbl = new javax.swing.JLabel();
        showEmployeePnl = new javax.swing.JPanel();
        employeeLbl = new javax.swing.JLabel();
        employeeNumberLbl = new javax.swing.JLabel();
        descriptionEmployeeLbl = new javax.swing.JLabel();
        totalRevenuePnl = new javax.swing.JPanel();
        totalRevenueLbl = new javax.swing.JLabel();
        totalRevenueNumberLbl = new javax.swing.JLabel();
        descriptionTotalRevenueLbl = new javax.swing.JLabel();
        decorStandPnl = new javax.swing.JPanel();
        welcomeDisplayPnl = new javax.swing.JPanel();
        adminWelcomeMsgLbl = new javax.swing.JLabel();
        notifyAdminMsgLbl = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        titleforDisplayTable = new javax.swing.JLabel();
        addVenuePagePnl = new javax.swing.JPanel();
        detailsInputContainerPnl = new javax.swing.JPanel();
        inputVenueIdTxtFld = new javax.swing.JTextField();
        idErrorMsgLbl = new javax.swing.JLabel();
        inputVenueContactTxtFld = new javax.swing.JTextField();
        contactErrorMsgLbl = new javax.swing.JLabel();
        inputVenueNameTxtFld = new javax.swing.JTextField();
        inputVenueAddressTxtFld = new javax.swing.JTextField();
        addressErrorMsgLbl = new javax.swing.JLabel();
        inputVenueCityComboBx = new javax.swing.JComboBox<>();
        totalCapacityLbl = new javax.swing.JLabel();
        inputVenueCapacitySlider = new javax.swing.JSlider();
        perPlatePriceLbl = new javax.swing.JLabel();
        inputPerPlatePriceSlider = new javax.swing.JSlider();
        inputVenueTypeComboBx = new javax.swing.JComboBox<>();
        addVenueBtn = new javax.swing.JButton();
        capacityValueDisplayLbl = new javax.swing.JLabel();
        perPlatePriceDisplayLbl = new javax.swing.JLabel();
        nameErrorMsgLbl = new javax.swing.JLabel();
        inputTitleLbl = new javax.swing.JLabel();
        detailTitleLbl = new javax.swing.JLabel();
        addVenueLayeredPnl = new javax.swing.JLayeredPane();
        inputSearchTxtFld = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        filterPopUpPnl = new javax.swing.JPanel();
        sortByComboBx = new javax.swing.JComboBox<>();
        ascendSortOrderRadioBtn = new javax.swing.JRadioButton();
        descendSortOrderRadioBtn = new javax.swing.JRadioButton();
        doFilterBtn = new javax.swing.JButton();
        insertDataTableScrlPane = new javax.swing.JScrollPane();
        venueModifyTbl = new javax.swing.JTable();
        refreshBtn = new javax.swing.JButton();
        filterContainerPnl = new javax.swing.JPanel();
        filterLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        decorStandForaddVenuePnl = new javax.swing.JPanel();
        settingPagePnl = new javax.swing.JPanel();
        backgroundModeSptPane = new javax.swing.JSplitPane();
        darkModePnl = new javax.swing.JPanel();
        darkImageLbl = new javax.swing.JLabel();
        darkModeWelcomeLbl = new javax.swing.JLabel();
        selectDarkModeRadioBtn = new javax.swing.JRadioButton();
        lightModePnl = new javax.swing.JPanel();
        lightImageLbl = new javax.swing.JLabel();
        lightModeWelcomeLbl = new javax.swing.JLabel();
        selectLightModeRadioBtn = new javax.swing.JRadioButton();
        optionMessageLbl = new javax.swing.JLabel();
        decorStandForSettingPnl = new javax.swing.JPanel();
        aboutUsPagePnl = new javax.swing.JPanel();
        aboutUsTitleLbl = new javax.swing.JLabel();
        editAreaScrlPnl = new javax.swing.JScrollPane();
        editBlogTxtArea = new javax.swing.JTextArea();
        editForBlogBtn = new javax.swing.JButton();
        aboutUsImageLbl = new javax.swing.JLabel();
        instagramPnl = new javax.swing.JPanel();
        instagramIdDetailsLbl = new javax.swing.JLabel();
        facebookPnl = new javax.swing.JPanel();
        facebookIdDetailsLbl = new javax.swing.JLabel();
        decorStandAboutUsPnl = new javax.swing.JPanel();
        chatWithEmployeePnl = new javax.swing.JPanel();
        chatToEmployeeLbl = new javax.swing.JLabel();
        speakToTeamLbl = new javax.swing.JLabel();
        emailLbl = new javax.swing.JLabel();
        chatIconLbl = new javax.swing.JLabel();
        visitUsPnl = new javax.swing.JPanel();
        visitUsLbl = new javax.swing.JLabel();
        visitOfficeHqLbl = new javax.swing.JLabel();
        locationOnGoogleMapLbl = new javax.swing.JLabel();
        mapIconLbl = new javax.swing.JLabel();
        callUsPnl = new javax.swing.JPanel();
        callUsLbl = new javax.swing.JLabel();
        timeToContactLbl = new javax.swing.JLabel();
        contactNumberLbl = new javax.swing.JLabel();
        phoneIconLbl = new javax.swing.JLabel();
        followUsPnl = new javax.swing.JPanel();
        followUsLbl = new javax.swing.JLabel();
        venueGalleryPagePnl = new javax.swing.JPanel();
        firstVenuePictureLbl = new javax.swing.JLabel();
        venuePictureCollectionPnl = new javax.swing.JPanel();
        pictureTwo = new javax.swing.JLabel();
        pictureThree = new javax.swing.JLabel();
        pictureOne = new javax.swing.JLabel();
        pictureTwo1 = new javax.swing.JLabel();
        topContainerNavPnl = new javax.swing.JPanel();
        manageVenueNavPnl = new javax.swing.JPanel();
        manageVenueNavLbl = new javax.swing.JLabel();
        manageVenueIconLbl = new javax.swing.JLabel();
        aboutUsNavPnl = new javax.swing.JPanel();
        aboutUsNavLbl = new javax.swing.JLabel();
        aboutUsIconLbl = new javax.swing.JLabel();
        middleContainerNavPnl = new javax.swing.JPanel();
        venueGalleryNavPnl = new javax.swing.JPanel();
        venueGalleryNavLbl = new javax.swing.JLabel();
        venueGalleryIconLbl = new javax.swing.JLabel();
        settingNavPnl = new javax.swing.JPanel();
        settingNavLbl = new javax.swing.JLabel();
        settingIconLbl = new javax.swing.JLabel();
        bottomContainerNavPnl = new javax.swing.JPanel();
        logOutNavPnl = new javax.swing.JPanel();
        logOutNavLbl = new javax.swing.JLabel();
        headerPnl = new javax.swing.JPanel();
        logoLbl = new javax.swing.JLabel();
        companyNameLbl = new javax.swing.JLabel();
        profileLbl = new javax.swing.JLabel();
        activeAdminMsgLbl = new javax.swing.JLabel();
        adminSignPnl = new javax.swing.JPanel();
        adminDashboardTitleLbl = new javax.swing.JLabel();
        adminDashboardSmallIconLbl = new javax.swing.JLabel();

        editColumnPnl.setBackground(new java.awt.Color(255, 255, 255));
        editColumnPnl.setMaximumSize(new java.awt.Dimension(61, 27));
        editColumnPnl.setMinimumSize(new java.awt.Dimension(61, 27));

        editVenueDetailsBtn.setContentAreaFilled(false);
        editVenueDetailsBtn.setBorderPainted(false);
        editVenueDetailsBtn.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        editVenueDetailsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/itemedit.jpg"))); // NOI18N
        editVenueDetailsBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        editVenueDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editVenueDetailsBtnActionPerformed(evt);
            }
        });

        removeVenueDetailsBtn.setContentAreaFilled(false);
        removeVenueDetailsBtn.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        removeVenueDetailsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/icondelete_1.jpg"))); // NOI18N
        removeVenueDetailsBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        removeVenueDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVenueDetailsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editColumnPnlLayout = new javax.swing.GroupLayout(editColumnPnl);
        editColumnPnl.setLayout(editColumnPnlLayout);
        editColumnPnlLayout.setHorizontalGroup(
            editColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editColumnPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editVenueDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeVenueDetailsBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editColumnPnlLayout.setVerticalGroup(
            editColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editColumnPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(editColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editVenueDetailsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeVenueDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rendererColumnPnl.setBackground(new java.awt.Color(255, 255, 255));
        rendererColumnPnl.setMaximumSize(new java.awt.Dimension(61, 27));
        rendererColumnPnl.setMinimumSize(new java.awt.Dimension(61, 27));

        editVenueDetailsBtn2.setContentAreaFilled(false);
        editVenueDetailsBtn2.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        editVenueDetailsBtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/itemedit.jpg"))); // NOI18N
        editVenueDetailsBtn2.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        editVenueDetailsBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editVenueDetailsBtn2ActionPerformed(evt);
            }
        });

        removeVenueDetailsBtn2.setContentAreaFilled(false);
        removeVenueDetailsBtn2.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        removeVenueDetailsBtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/icondelete_1.jpg"))); // NOI18N
        removeVenueDetailsBtn2.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        removeVenueDetailsBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVenueDetailsBtn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rendererColumnPnlLayout = new javax.swing.GroupLayout(rendererColumnPnl);
        rendererColumnPnl.setLayout(rendererColumnPnlLayout);
        rendererColumnPnlLayout.setHorizontalGroup(
            rendererColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rendererColumnPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editVenueDetailsBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeVenueDetailsBtn2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rendererColumnPnlLayout.setVerticalGroup(
            rendererColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rendererColumnPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(rendererColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editVenueDetailsBtn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeVenueDetailsBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        popUpDialog.setBounds(new java.awt.Rectangle(350, 200, 646, 415));
        popUpDialog.setModal(true);
        popUpDialog.setUndecorated(true);
        popUpDialog.setResizable(false);

        editInputPnl.setBackground(new java.awt.Color(255, 255, 255));

        venueIdOnPopUpMsgFld.setEditable(false);
        venueIdOnPopUpMsgFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(14, 30, 63)), "Venue ID"));

        venueContactOnPopUpMsgFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(14, 30, 63)), "Contact Number"));

        inputVenueCapacitySlider1.setBackground(new java.awt.Color(0, 0, 0));
        inputVenueCapacitySlider1.setMajorTickSpacing(50);
        inputVenueCapacitySlider1.setMaximum(200);
        inputVenueCapacitySlider1.setMinimum(50);
        inputVenueCapacitySlider.setMajorTickSpacing(50);
        inputVenueCapacitySlider.setMinorTickSpacing(5);
        inputVenueCapacitySlider1.setPaintLabels(true);
        inputVenueCapacitySlider1.setPaintTicks(true);
        inputVenueCapacitySlider1.setValue(100);
        inputVenueCapacitySlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inputVenueCapacitySlider1StateChanged(evt);
            }
        });

        inputPerPlatePriceSlider1.setBackground(new java.awt.Color(0, 0, 0));
        inputPerPlatePriceSlider1.setMajorTickSpacing(200);
        inputPerPlatePriceSlider1.setMaximum(1000);
        inputPerPlatePriceSlider1.setMinimum(100);
        inputPerPlatePriceSlider1.setPaintLabels(true);
        inputPerPlatePriceSlider1.setPaintTicks(true);
        inputPerPlatePriceSlider1.setValue(500);
        inputPerPlatePriceSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inputPerPlatePriceSlider1StateChanged(evt);
            }
        });

        updateVenueDetailsBtn.setText("UPDATE");
        updateVenueDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateVenueDetailsBtnActionPerformed(evt);
            }
        });

        cancelVenueChangeBtn.setText("CANCEL");
        cancelVenueChangeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelVenueChangeBtnActionPerformed(evt);
            }
        });

        venueAddressOnPopUpMsgFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(14, 30, 63)), "Venue Address"));
        venueAddressOnPopUpMsgFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                venueAddressOnPopUpMsgFldActionPerformed(evt);
            }
        });

        inputVenueTypeComboBx1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Meeting Conference", "Hall" }));
        inputVenueTypeComboBx1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Type"));

        inputVenueCityComboBx1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kathmandu", "bhaktapur", "Dharan", "Koteshwor" }));
        inputVenueCityComboBx1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "City"));

        inputCapacityLbl.setText("Capacity");

        inputPerPlatePriceLbl.setText("Per plate price");

        venueNameOnPopUpMsgFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(14, 30, 63)), "Venue Name"));

        inputVenueNameErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        inputVenueContactErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        inputVenueAddressErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        javax.swing.GroupLayout editInputPnlLayout = new javax.swing.GroupLayout(editInputPnl);
        editInputPnl.setLayout(editInputPnlLayout);
        editInputPnlLayout.setHorizontalGroup(
            editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editInputPnlLayout.createSequentialGroup()
                .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editInputPnlLayout.createSequentialGroup()
                        .addGap(0, 34, Short.MAX_VALUE)
                        .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(editInputPnlLayout.createSequentialGroup()
                                .addComponent(inputCapacityLbl)
                                .addGap(18, 18, 18)
                                .addComponent(inputVenueCapacitySlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(inputPerPlatePriceLbl))
                            .addComponent(inputVenueNameErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, editInputPnlLayout.createSequentialGroup()
                                .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(editInputPnlLayout.createSequentialGroup()
                                        .addGap(149, 149, 149)
                                        .addComponent(showCapacityValueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(editInputPnlLayout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(inputVenueAddressErrorMsgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(venueAddressOnPopUpMsgFld, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputVenueCityComboBx1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editInputPnlLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(inputPerPlatePriceSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(editInputPnlLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(inputVenueTypeComboBx1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(editInputPnlLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(inputVenueContactErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editInputPnlLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(showPerPlatePriceValueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80))))
                    .addGroup(editInputPnlLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(venueNameOnPopUpMsgFld, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(venueContactOnPopUpMsgFld, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editInputPnlLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(cancelVenueChangeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateVenueDetailsBtn)
                .addGap(44, 44, 44))
            .addGroup(editInputPnlLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(venueIdOnPopUpMsgFld, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editInputPnlLayout.setVerticalGroup(
            editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editInputPnlLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(venueNameOnPopUpMsgFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(venueContactOnPopUpMsgFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(venueIdOnPopUpMsgFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputVenueNameErrorMsgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                    .addComponent(inputVenueContactErrorMsgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(venueAddressOnPopUpMsgFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputVenueCityComboBx1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputVenueTypeComboBx1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(inputVenueAddressErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editInputPnlLayout.createSequentialGroup()
                        .addComponent(showCapacityValueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputPerPlatePriceSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputPerPlatePriceLbl)
                            .addComponent(inputVenueCapacitySlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputCapacityLbl))
                        .addGap(41, 41, 41)
                        .addGroup(editInputPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateVenueDetailsBtn)
                            .addComponent(cancelVenueChangeBtn)))
                    .addComponent(showPerPlatePriceValueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout popUpDialogLayout = new javax.swing.GroupLayout(popUpDialog.getContentPane());
        popUpDialog.getContentPane().setLayout(popUpDialogLayout);
        popUpDialogLayout.setHorizontalGroup(
            popUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editInputPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        popUpDialogLayout.setVerticalGroup(
            popUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editInputPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("23048598ErikaShrestha");
        setMinimumSize(new java.awt.Dimension(1280, 800));
        setName("frame"); // NOI18N
        setResizable(false);

        containerPnl.setBackground(new java.awt.Color(255, 255, 255));
        containerPnl.setMaximumSize(new java.awt.Dimension(1280, 800));
        containerPnl.setMinimumSize(new java.awt.Dimension(1280, 800));
        containerPnl.setPreferredSize(new java.awt.Dimension(1280, 800));
        containerPnl.setLayout(new java.awt.CardLayout());

        loadingPagePnl.setBackground(new java.awt.Color(255, 255, 255));
        loadingPagePnl.setMaximumSize(new java.awt.Dimension(1088, 700));
        loadingPagePnl.setMinimumSize(new java.awt.Dimension(1088, 700));
        loadingPagePnl.setPreferredSize(new java.awt.Dimension(1088, 700));
        loadingPagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sloganLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        sloganLbl.setText("Begin your new innings here.");
        loadingPagePnl.add(sloganLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, -1, -1));

        companyTitleLbl.setFont(new java.awt.Font("SansSerif", 1, 60)); // NOI18N
        companyTitleLbl.setText("Knot Spot");
        loadingPagePnl.add(companyTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 260, 310, -1));

        firstPopUpImage.setPreferredSize(new java.awt.Dimension(240, 240));
        loadingPagePnl.add(firstPopUpImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 240, 240));

        secondPopUpImage.setPreferredSize(new java.awt.Dimension(240, 240));
        loadingPagePnl.add(secondPopUpImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 240, 240));

        thirdPopUpImage.setPreferredSize(new java.awt.Dimension(240, 240));
        loadingPagePnl.add(thirdPopUpImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 490, 320, 240));

        fourthPopUpImage.setPreferredSize(new java.awt.Dimension(240, 240));
        loadingPagePnl.add(fourthPopUpImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 470, 240, 240));

        fifthPopUpImage.setPreferredSize(new java.awt.Dimension(240, 240));
        loadingPagePnl.add(fifthPopUpImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 240, 240));

        loadingSymbolLbl.setFont(new java.awt.Font("Sans Serif Collection", 0, 14)); // NOI18N
        loadingSymbolLbl.setText("starting request....");
        loadingPagePnl.add(loadingSymbolLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 720, 290, -1));

        loadingValueLbl.setFont(new java.awt.Font("Sans Serif Collection", 0, 18)); // NOI18N
        loadingValueLbl.setText("0%");
        loadingPagePnl.add(loadingValueLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 710, -1, -1));

        loadingPagePrgBar.setForeground(Color.RED);
        loadingPagePnl.add(loadingPagePrgBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 760, 1280, 10));

        loadingPageBackgroundLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/imageforloading.jpg"))); // NOI18N
        loadingPageBackgroundLbl.setMaximumSize(new java.awt.Dimension(1280, 800));
        loadingPageBackgroundLbl.setMinimumSize(new java.awt.Dimension(1280, 800));
        loadingPageBackgroundLbl.setPreferredSize(new java.awt.Dimension(1280, 800));
        loadingPagePnl.add(loadingPageBackgroundLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 780));

        containerPnl.add(loadingPagePnl, "LoadingScreen");

        loginPagePnl.setBackground(new java.awt.Color(250, 245, 239));
        loginPagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginFormPnl.setBackground(new java.awt.Color(255, 255, 255));
        loginFormPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginSideImgLbl.setBackground(new java.awt.Color(255, 255, 255));
        loginSideImgLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/loggg.png"))); // NOI18N
        loginSideImgLbl.setPreferredSize(new java.awt.Dimension(399, 500));
        loginFormPnl.add(loginSideImgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 29, 590, 530));

        loginInfoContainerPnl.setBackground(new java.awt.Color(14, 30, 63));
        loginInfoContainerPnl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(14, 30, 63), 2, true));

        javax.swing.GroupLayout loginInfoContainerPnlLayout = new javax.swing.GroupLayout(loginInfoContainerPnl);
        loginInfoContainerPnl.setLayout(loginInfoContainerPnlLayout);
        loginInfoContainerPnlLayout.setHorizontalGroup(
            loginInfoContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );
        loginInfoContainerPnlLayout.setVerticalGroup(
            loginInfoContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        loginFormPnl.add(loginInfoContainerPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 14, 540, 570));

        loginTitleLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        loginTitleLbl.setText("Login");
        loginFormPnl.add(loginTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 20, -1, -1));

        usernameLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameLbl.setText("Username");
        loginFormPnl.add(usernameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 100, -1, -1));

        inputUsernameTxtFld.setForeground(new java.awt.Color(204, 204, 204));
        inputUsernameTxtFld.setText("Enter username");
        inputUsernameTxtFld.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(14, 30, 63), 2, true));
        inputUsernameTxtFld.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputUsernameTxtFldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputUsernameTxtFldFocusLost(evt);
            }
        });
        inputUsernameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputUsernameTxtFldActionPerformed(evt);
            }
        });
        loginFormPnl.add(inputUsernameTxtFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 120, 248, 32));

        passwordLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordLbl.setText("Password");
        loginFormPnl.add(passwordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 200, -1, -1));

        inputPasswordPwdFld.setForeground(new java.awt.Color(204, 204, 204));
        inputPasswordPwdFld.setText("Enter password");
        inputPasswordPwdFld.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 102), 2, true));
        inputPasswordPwdFld.setEchoChar('\u0000');
        inputPasswordPwdFld.setEchoChar((char)0);
        inputPasswordPwdFld.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputPasswordPwdFldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputPasswordPwdFldFocusLost(evt);
            }
        });
        inputPasswordPwdFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPasswordPwdFldActionPerformed(evt);
            }
        });
        loginFormPnl.add(inputPasswordPwdFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 220, 254, 33));

        loginBtn.setBackground(new java.awt.Color(14, 30, 63));
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("LOG IN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        loginFormPnl.add(loginBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 350, 250, -1));

        showPwdCheckBx.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        showPwdCheckBx.setText("show password");
        showPwdCheckBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPwdCheckBxActionPerformed(evt);
            }
        });
        loginFormPnl.add(showPwdCheckBx, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 300, 80, -1));

        inputUsernameErrorLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        loginFormPnl.add(inputUsernameErrorLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 160, 250, 20));

        inputPasswordErrorPwdLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        loginFormPnl.add(inputPasswordErrorPwdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 260, 250, 20));

        forgotPwdLbl.setForeground(new java.awt.Color(14, 30, 63));
        forgotPwdLbl.setText("Forgot Password?");
        loginFormPnl.add(forgotPwdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 300, -1, -1));

        lineOnePnl.setBackground(new java.awt.Color(153, 153, 153));
        lineOnePnl.setMaximumSize(new java.awt.Dimension(80, 2));
        lineOnePnl.setMinimumSize(new java.awt.Dimension(80, 2));
        lineOnePnl.setPreferredSize(new java.awt.Dimension(80, 2));

        javax.swing.GroupLayout lineOnePnlLayout = new javax.swing.GroupLayout(lineOnePnl);
        lineOnePnl.setLayout(lineOnePnlLayout);
        lineOnePnlLayout.setHorizontalGroup(
            lineOnePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );
        lineOnePnlLayout.setVerticalGroup(
            lineOnePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        loginFormPnl.add(lineOnePnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 410, -1, 2));

        lineTwoPnl.setBackground(new java.awt.Color(153, 153, 153));
        lineTwoPnl.setMaximumSize(new java.awt.Dimension(100, 2));
        lineTwoPnl.setMinimumSize(new java.awt.Dimension(100, 2));
        lineTwoPnl.setPreferredSize(new java.awt.Dimension(80, 2));

        javax.swing.GroupLayout lineTwoPnlLayout = new javax.swing.GroupLayout(lineTwoPnl);
        lineTwoPnl.setLayout(lineTwoPnlLayout);
        lineTwoPnlLayout.setHorizontalGroup(
            lineTwoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        lineTwoPnlLayout.setVerticalGroup(
            lineTwoPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        loginFormPnl.add(lineTwoPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 410, -1, 2));

        continueLbl.setBackground(new java.awt.Color(153, 153, 153));
        continueLbl.setForeground(new java.awt.Color(153, 153, 153));
        continueLbl.setText("or continue with");
        loginFormPnl.add(continueLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 400, -1, -1));

        logInContinueAllIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/continueiconall.png"))); // NOI18N
        loginFormPnl.add(logInContinueAllIconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 450, 170, 45));

        loginPagePnl.add(loginFormPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 960, 600));

        containerPnl.add(loginPagePnl, "LoginScreen");

        navigationContainerPnl.setBackground(new java.awt.Color(250, 245, 239));
        navigationContainerPnl.setMaximumSize(new java.awt.Dimension(300, 800));
        navigationContainerPnl.setMinimumSize(new java.awt.Dimension(300, 800));
        navigationContainerPnl.setPreferredSize(new java.awt.Dimension(300, 800));

        adminDashboardPagesPnl.setBackground(new java.awt.Color(255, 255, 255));
        adminDashboardPagesPnl.setLayout(new java.awt.CardLayout());

        homePagePnl.setBackground(new java.awt.Color(250, 245, 239));
        homePagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        recentDataScrollBr.setBackground(new java.awt.Color(255, 255, 255));

        DefaultTableCellRenderer headerRender = new DefaultTableCellRenderer();
        headerRender.setBackground(Color.decode("#0E1E3F"));
        headerRender.setForeground(Color.decode("#FFFFFF"));
        JTableHeader tableHeader = frontDisplayTable.getTableHeader();
        tableHeader.setFont(new Font("Sans Serif", Font.BOLD, 12));
        tableHeader.setOpaque(false);
        tableHeader.setDefaultRenderer(headerRender);
        frontDisplayTable.setFont(new java.awt.Font("Sans Serif", Font.BOLD, 10));
        frontDisplayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "address", "city", "contact", "type", "capacity", "rent fee"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        frontDisplayTable.setFocusable(false);
        frontDisplayTable.setRowHeight(30);
        frontDisplayTable.setSelectionBackground(new java.awt.Color(90, 132, 154));
        frontDisplayTable.setShowHorizontalLines(true);
        frontDisplayTable.getTableHeader().setReorderingAllowed(false);
        frontDisplayTable.setVerifyInputWhenFocusTarget(false);
        recentDataScrollBr.setViewportView(frontDisplayTable);

        homePagePnl.add(recentDataScrollBr, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 333, 1040, 340));

        displayRealTimeDataPnl.setBackground(new java.awt.Color(14, 30, 63));

        totalVenuePnl.setBackground(new java.awt.Color(255, 255, 255));

        totalVenueLbl.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        totalVenueLbl.setText("Total Venues");

        totalVenueNumberLbl.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        totalVenueNumberLbl.setForeground(new java.awt.Color(0, 102, 204));
        totalVenueNumberLbl.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                totalVenueNumberLblInputMethodTextChanged(evt);
            }
        });

        descriptionTotalVenueLbl.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        descriptionTotalVenueLbl.setForeground(new java.awt.Color(255, 204, 0));
        descriptionTotalVenueLbl.setText("increase in 2 from last year");

        javax.swing.GroupLayout totalVenuePnlLayout = new javax.swing.GroupLayout(totalVenuePnl);
        totalVenuePnl.setLayout(totalVenuePnlLayout);
        totalVenuePnlLayout.setHorizontalGroup(
            totalVenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalVenuePnlLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(totalVenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionTotalVenueLbl)
                    .addComponent(totalVenueNumberLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalVenueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        totalVenuePnlLayout.setVerticalGroup(
            totalVenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalVenuePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(totalVenueLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalVenueNumberLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(descriptionTotalVenueLbl)
                .addContainerGap())
        );

        customerVisitsPnl.setBackground(new java.awt.Color(255, 255, 255));

        customerVisitLbl.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        customerVisitLbl.setText("Customer Visitors");

        customerVisitNumberLbl.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        customerVisitNumberLbl.setForeground(new java.awt.Color(0, 102, 204));
        customerVisitNumberLbl.setText("3420");

        descriptionCustomerVisitLbl.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        descriptionCustomerVisitLbl.setForeground(new java.awt.Color(255, 204, 0));
        descriptionCustomerVisitLbl.setText("^ 47% last week");

        javax.swing.GroupLayout customerVisitsPnlLayout = new javax.swing.GroupLayout(customerVisitsPnl);
        customerVisitsPnl.setLayout(customerVisitsPnlLayout);
        customerVisitsPnlLayout.setHorizontalGroup(
            customerVisitsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerVisitsPnlLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(customerVisitsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionCustomerVisitLbl)
                    .addComponent(customerVisitNumberLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerVisitLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        customerVisitsPnlLayout.setVerticalGroup(
            customerVisitsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerVisitsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerVisitLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customerVisitNumberLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(descriptionCustomerVisitLbl)
                .addContainerGap())
        );

        showEmployeePnl.setBackground(new java.awt.Color(255, 255, 255));

        employeeLbl.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        employeeLbl.setText("Employees");

        employeeNumberLbl.setBackground(new java.awt.Color(255, 255, 255));
        employeeNumberLbl.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        employeeNumberLbl.setForeground(new java.awt.Color(0, 102, 204));
        employeeNumberLbl.setText("33");

        descriptionEmployeeLbl.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        descriptionEmployeeLbl.setForeground(new java.awt.Color(255, 204, 0));
        descriptionEmployeeLbl.setText("^ 30% last week");

        javax.swing.GroupLayout showEmployeePnlLayout = new javax.swing.GroupLayout(showEmployeePnl);
        showEmployeePnl.setLayout(showEmployeePnlLayout);
        showEmployeePnlLayout.setHorizontalGroup(
            showEmployeePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showEmployeePnlLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(showEmployeePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(employeeNumberLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(employeeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descriptionEmployeeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        showEmployeePnlLayout.setVerticalGroup(
            showEmployeePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showEmployeePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(employeeNumberLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionEmployeeLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        totalRevenuePnl.setBackground(new java.awt.Color(255, 255, 255));

        totalRevenueLbl.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        totalRevenueLbl.setText("Total Revenue");

        totalRevenueNumberLbl.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        totalRevenueNumberLbl.setForeground(new java.awt.Color(0, 102, 204));
        totalRevenueNumberLbl.setText("Rs. 4,23,000");

        descriptionTotalRevenueLbl.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        descriptionTotalRevenueLbl.setForeground(new java.awt.Color(255, 204, 0));
        descriptionTotalRevenueLbl.setText("^ 30% last week");

        javax.swing.GroupLayout totalRevenuePnlLayout = new javax.swing.GroupLayout(totalRevenuePnl);
        totalRevenuePnl.setLayout(totalRevenuePnlLayout);
        totalRevenuePnlLayout.setHorizontalGroup(
            totalRevenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalRevenuePnlLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(totalRevenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionTotalRevenueLbl)
                    .addComponent(totalRevenueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalRevenueNumberLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        totalRevenuePnlLayout.setVerticalGroup(
            totalRevenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(totalRevenuePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(totalRevenueLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalRevenueNumberLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(descriptionTotalRevenueLbl)
                .addContainerGap())
        );

        javax.swing.GroupLayout displayRealTimeDataPnlLayout = new javax.swing.GroupLayout(displayRealTimeDataPnl);
        displayRealTimeDataPnl.setLayout(displayRealTimeDataPnlLayout);
        displayRealTimeDataPnlLayout.setHorizontalGroup(
            displayRealTimeDataPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayRealTimeDataPnlLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(displayRealTimeDataPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalVenuePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalRevenuePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addGroup(displayRealTimeDataPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showEmployeePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerVisitsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        displayRealTimeDataPnlLayout.setVerticalGroup(
            displayRealTimeDataPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayRealTimeDataPnlLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(displayRealTimeDataPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(customerVisitsPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalVenuePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(displayRealTimeDataPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalRevenuePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(showEmployeePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );

        homePagePnl.add(displayRealTimeDataPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 390, 270));

        decorStandPnl.setBackground(new java.awt.Color(125, 162, 169, 80));

        javax.swing.GroupLayout decorStandPnlLayout = new javax.swing.GroupLayout(decorStandPnl);
        decorStandPnl.setLayout(decorStandPnlLayout);
        decorStandPnlLayout.setHorizontalGroup(
            decorStandPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        decorStandPnlLayout.setVerticalGroup(
            decorStandPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        homePagePnl.add(decorStandPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, 150, 800));

        welcomeDisplayPnl.setBackground(new java.awt.Color(176, 197, 202));
        welcomeDisplayPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adminWelcomeMsgLbl.setFont(new java.awt.Font("Sans Serif Collection", 0, 24)); // NOI18N
        adminWelcomeMsgLbl.setText("Welcome");
        welcomeDisplayPnl.add(adminWelcomeMsgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 15, -1, 30));

        notifyAdminMsgLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 24)); // NOI18N
        notifyAdminMsgLbl.setText("Erika Shrestha");
        welcomeDisplayPnl.add(notifyAdminMsgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 46, -1, 40));

        jPanel8.setBackground(new java.awt.Color(90, 132, 154));

        jLabel8.setBackground(new java.awt.Color(90, 132, 154));
        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setText("islington, Nepal");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel8)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        welcomeDisplayPnl.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 139, 140, -1));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/imageforback4.png"))); // NOI18N
        welcomeDisplayPnl.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, -7, 350, 200));

        homePagePnl.add(welcomeDisplayPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 590, 190));

        titleforDisplayTable.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        titleforDisplayTable.setText("RECENTLY ADDED VENUES");
        homePagePnl.add(titleforDisplayTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        adminDashboardPagesPnl.add(homePagePnl, "HomePage");

        addVenuePagePnl.setBackground(new java.awt.Color(250, 245, 239));
        addVenuePagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        detailsInputContainerPnl.setBackground(new java.awt.Color(250, 245, 239));
        detailsInputContainerPnl.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(14, 30, 63), 5, true));

        inputVenueIdTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Venue ID"));
        inputVenueIdTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueIdTxtFldActionPerformed(evt);
            }
        });

        idErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        inputVenueContactTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Contact Number"));
        inputVenueContactTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueContactTxtFldActionPerformed(evt);
            }
        });

        contactErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        inputVenueNameTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Venue Name"));
        inputVenueNameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueNameTxtFldActionPerformed(evt);
            }
        });

        inputVenueAddressTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Address"));
        inputVenueAddressTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueAddressTxtFldActionPerformed(evt);
            }
        });

        addressErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        inputVenueCityComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kathmandu", "bhaktapur", "Dharan", "Koteshwor" }));
        inputVenueCityComboBx.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "City"));

        totalCapacityLbl.setText("Total Capacity :");

        inputVenueCapacitySlider.setMajorTickSpacing(50);
        inputVenueCapacitySlider.setMaximum(200);
        inputVenueCapacitySlider.setMinimum(50);
        inputVenueCapacitySlider.setPaintLabels(true);
        inputVenueCapacitySlider.setMajorTickSpacing(50);
        inputVenueCapacitySlider.setMinorTickSpacing(5);
        inputVenueCapacitySlider.setPaintTicks(true);
        inputVenueCapacitySlider.setValue(100);
        inputVenueCapacitySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inputVenueCapacitySliderStateChanged(evt);
            }
        });

        perPlatePriceLbl.setText("Per Plate Price:");

        inputPerPlatePriceSlider.setMajorTickSpacing(200);
        inputPerPlatePriceSlider.setMaximum(1000);
        inputPerPlatePriceSlider.setMinimum(100);
        inputPerPlatePriceSlider.setPaintLabels(true);
        inputPerPlatePriceSlider.setMajorTickSpacing(50);
        inputPerPlatePriceSlider.setMinorTickSpacing(5);
        inputPerPlatePriceSlider.setPaintTicks(true);
        inputPerPlatePriceSlider.setValue(500);
        inputPerPlatePriceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inputPerPlatePriceSliderStateChanged(evt);
            }
        });

        inputVenueTypeComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Meeting Conference", "Hall" }));
        inputVenueTypeComboBx.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Type"));

        addVenueBtn.setBackground(new java.awt.Color(14, 30, 63));
        addVenueBtn.setForeground(new java.awt.Color(255, 255, 255));
        addVenueBtn.setText("ADD");
        addVenueBtn.setBorder(null);
        addVenueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVenueBtnActionPerformed(evt);
            }
        });

        nameErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        javax.swing.GroupLayout detailsInputContainerPnlLayout = new javax.swing.GroupLayout(detailsInputContainerPnl);
        detailsInputContainerPnl.setLayout(detailsInputContainerPnlLayout);
        detailsInputContainerPnlLayout.setHorizontalGroup(
            detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                        .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                                .addComponent(inputVenueIdTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputVenueNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116))
                            .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                                .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                                        .addComponent(idErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(nameErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                                        .addComponent(inputVenueAddressTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(71, 71, 71)
                                        .addComponent(inputVenueCityComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputVenueTypeComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueContactTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                        .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                                .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(inputVenueCapacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addressErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsInputContainerPnlLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addVenueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)))
                        .addComponent(inputPerPlatePriceSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
            .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(totalCapacityLbl)
                .addGap(155, 155, 155)
                .addComponent(capacityValueDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(perPlatePriceLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(perPlatePriceDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        detailsInputContainerPnlLayout.setVerticalGroup(
            detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                        .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputVenueIdTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueContactTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(contactErrorMsgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                                .addComponent(idErrorMsgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(nameErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputVenueTypeComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(inputVenueAddressTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(inputVenueCityComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)
                        .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                                .addComponent(addressErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(capacityValueDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(perPlatePriceDisplayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(perPlatePriceLbl)))
                    .addComponent(totalCapacityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsInputContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                        .addComponent(inputPerPlatePriceSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(detailsInputContainerPnlLayout.createSequentialGroup()
                        .addComponent(inputVenueCapacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addVenueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        addVenuePagePnl.add(detailsInputContainerPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 59, 934, -1));

        inputTitleLbl.setBackground(new java.awt.Color(14, 30, 63));
        inputTitleLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        inputTitleLbl.setForeground(new java.awt.Color(14, 30, 63));
        inputTitleLbl.setText("INPUT");
        addVenuePagePnl.add(inputTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, -1, -1));

        detailTitleLbl.setBackground(new java.awt.Color(0, 51, 204));
        detailTitleLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        detailTitleLbl.setForeground(new java.awt.Color(153, 153, 153));
        detailTitleLbl.setText("DETAILS");
        addVenuePagePnl.add(detailTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, -1, -1));

        inputSearchTxtFld.setBackground(new java.awt.Color(250, 245, 239));
        inputSearchTxtFld.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        inputSearchTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputSearchTxtFldActionPerformed(evt);
            }
        });

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/search_icon.png"))); // NOI18N
        searchBtn.setBorder(null);
        searchBtn.setBorderPainted(false);
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchBtnMouseEntered(evt);
            }
        });
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        filterPopUpPnl.setBackground(new java.awt.Color(255, 255, 255));
        filterPopUpPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));
        filterPopUpPnl.setMaximumSize(new java.awt.Dimension(165, 178));
        filterPopUpPnl.setMinimumSize(new java.awt.Dimension(165, 178));
        filterPopUpPnl.setPreferredSize(new java.awt.Dimension(165, 178));

        sortByComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort By", "Id", "Name", "City", "Capacity", "Price" }));
        sortByComboBx.setToolTipText("");
        sortByComboBx.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sortByComboBxFocusGained(evt);
            }
        });
        sortByComboBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByComboBxActionPerformed(evt);
            }
        });

        sortButtonGroup.add(ascendSortOrderRadioBtn);
        ascendSortOrderRadioBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ascendSortOrderRadioBtn.setText("Ascending");
        ascendSortOrderRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ascendSortOrderRadioBtnActionPerformed(evt);
            }
        });

        sortButtonGroup.add(descendSortOrderRadioBtn);
        descendSortOrderRadioBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        descendSortOrderRadioBtn.setText("Descending");
        descendSortOrderRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descendSortOrderRadioBtnActionPerformed(evt);
            }
        });

        doFilterBtn.setText("ok");
        doFilterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doFilterBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filterPopUpPnlLayout = new javax.swing.GroupLayout(filterPopUpPnl);
        filterPopUpPnl.setLayout(filterPopUpPnlLayout);
        filterPopUpPnlLayout.setHorizontalGroup(
            filterPopUpPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterPopUpPnlLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(filterPopUpPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descendSortOrderRadioBtn)
                    .addComponent(sortByComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filterPopUpPnlLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(filterPopUpPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ascendSortOrderRadioBtn)
                    .addComponent(doFilterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );
        filterPopUpPnlLayout.setVerticalGroup(
            filterPopUpPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filterPopUpPnlLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(sortByComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(descendSortOrderRadioBtn)
                .addGap(18, 18, 18)
                .addComponent(ascendSortOrderRadioBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(doFilterBtn)
                .addContainerGap())
        );

        insertDataTableScrlPane.setAutoscrolls(true);
        insertDataTableScrlPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

        DefaultTableCellRenderer headerRenderForVenueTable = new DefaultTableCellRenderer();
        headerRenderForVenueTable.setBackground(Color.decode("#0E1E3F"));
        headerRenderForVenueTable.setForeground(Color.decode("#FFFFFF"));
        JTableHeader venuetableHeader = venueModifyTbl.getTableHeader();
        venuetableHeader.setFont(new Font("Sans Serif", Font.BOLD, 12));
        venuetableHeader.setDefaultRenderer(headerRenderForVenueTable);
        venueModifyTbl.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        venueModifyTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Address", "City", "Contact", "Type", "Capacity", "Rent Fee", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        venueModifyTbl.setRowHeight(40);
        venueModifyTbl.setSelectionBackground(new java.awt.Color(14, 30, 63));
        venueModifyTbl.setSelectionForeground(new java.awt.Color(255, 255, 255));
        venueModifyTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        venueModifyTbl.setShowHorizontalLines(true);
        venueModifyTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                venueModifyTblMouseClicked(evt);
            }
        });
        insertDataTableScrlPane.setViewportView(venueModifyTbl);
        if (venueModifyTbl.getColumnModel().getColumnCount() > 0) {
            venueModifyTbl.getColumnModel().getColumn(0).setPreferredWidth(40);
            venueModifyTbl.getColumnModel().getColumn(5).setPreferredWidth(130);
        }

        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/refreshiconimage.png"))); // NOI18N
        refreshBtn.setBorder(null);
        refreshBtn.setBorderPainted(false);
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        filterContainerPnl.setBackground(new java.awt.Color(14, 30, 63));
        filterContainerPnl.setForeground(new java.awt.Color(255, 255, 255));
        filterContainerPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterContainerPnlMouseClicked(evt);
            }
        });

        filterLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        filterLbl.setForeground(new java.awt.Color(255, 255, 255));
        filterLbl.setText("Filter");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/filtericon.png"))); // NOI18N

        javax.swing.GroupLayout filterContainerPnlLayout = new javax.swing.GroupLayout(filterContainerPnl);
        filterContainerPnl.setLayout(filterContainerPnlLayout);
        filterContainerPnlLayout.setHorizontalGroup(
            filterContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, filterContainerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterLbl)
                .addGap(23, 23, 23))
        );
        filterContainerPnlLayout.setVerticalGroup(
            filterContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filterContainerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filterLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        addVenueLayeredPnl.setLayer(inputSearchTxtFld, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addVenueLayeredPnl.setLayer(searchBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addVenueLayeredPnl.setLayer(filterPopUpPnl, javax.swing.JLayeredPane.POPUP_LAYER);
        addVenueLayeredPnl.setLayer(insertDataTableScrlPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addVenueLayeredPnl.setLayer(refreshBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        addVenueLayeredPnl.setLayer(filterContainerPnl, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout addVenueLayeredPnlLayout = new javax.swing.GroupLayout(addVenueLayeredPnl);
        addVenueLayeredPnl.setLayout(addVenueLayeredPnlLayout);
        addVenueLayeredPnlLayout.setHorizontalGroup(
            addVenueLayeredPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addVenueLayeredPnlLayout.createSequentialGroup()
                .addContainerGap(435, Short.MAX_VALUE)
                .addComponent(inputSearchTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(filterContainerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addComponent(insertDataTableScrlPane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(addVenueLayeredPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addVenueLayeredPnlLayout.createSequentialGroup()
                    .addContainerGap(698, Short.MAX_VALUE)
                    .addComponent(filterPopUpPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(77, 77, 77)))
        );
        addVenueLayeredPnlLayout.setVerticalGroup(
            addVenueLayeredPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addVenueLayeredPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addVenueLayeredPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputSearchTxtFld)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterContainerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(insertDataTableScrlPane, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
            .addGroup(addVenueLayeredPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addVenueLayeredPnlLayout.createSequentialGroup()
                    .addContainerGap(38, Short.MAX_VALUE)
                    .addComponent(filterPopUpPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(82, Short.MAX_VALUE)))
        );

        addVenuePagePnl.add(addVenueLayeredPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 940, 320));

        decorStandForaddVenuePnl.setBackground(new java.awt.Color(125, 162, 169, 80));

        javax.swing.GroupLayout decorStandForaddVenuePnlLayout = new javax.swing.GroupLayout(decorStandForaddVenuePnl);
        decorStandForaddVenuePnl.setLayout(decorStandForaddVenuePnlLayout);
        decorStandForaddVenuePnlLayout.setHorizontalGroup(
            decorStandForaddVenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        decorStandForaddVenuePnlLayout.setVerticalGroup(
            decorStandForaddVenuePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        addVenuePagePnl.add(decorStandForaddVenuePnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, 150, 800));

        adminDashboardPagesPnl.add(addVenuePagePnl, "ManageVenuePage");

        settingPagePnl.setBackground(new java.awt.Color(250, 245, 239));

        darkModePnl.setBackground(new java.awt.Color(51, 51, 51));
        darkModePnl.setMaximumSize(new java.awt.Dimension(150, 150));
        darkModePnl.setMinimumSize(new java.awt.Dimension(150, 150));
        darkModePnl.setPreferredSize(new java.awt.Dimension(150, 150));

        darkImageLbl.setForeground(new java.awt.Color(255, 255, 255));
        darkImageLbl.setText("Hello");

        darkModeWelcomeLbl.setForeground(new java.awt.Color(255, 255, 255));
        darkModeWelcomeLbl.setText("Welcome Admin!");

        selectDarkModeRadioBtn.setForeground(new java.awt.Color(255, 255, 255));
        selectDarkModeRadioBtn.setText("Dark Mode");
        selectDarkModeRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectDarkModeRadioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout darkModePnlLayout = new javax.swing.GroupLayout(darkModePnl);
        darkModePnl.setLayout(darkModePnlLayout);
        darkModePnlLayout.setHorizontalGroup(
            darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darkModePnlLayout.createSequentialGroup()
                .addGroup(darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(darkModePnlLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(darkImageLbl))
                    .addGroup(darkModePnlLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectDarkModeRadioBtn)
                            .addComponent(darkModeWelcomeLbl))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        darkModePnlLayout.setVerticalGroup(
            darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darkModePnlLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(darkImageLbl)
                .addGap(27, 27, 27)
                .addComponent(darkModeWelcomeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectDarkModeRadioBtn)
                .addGap(40, 40, 40))
        );

        backgroundModeSptPane.setRightComponent(darkModePnl);

        lightModePnl.setBackground(new java.awt.Color(255, 255, 255));
        lightModePnl.setMaximumSize(new java.awt.Dimension(150, 150));
        lightModePnl.setMinimumSize(new java.awt.Dimension(150, 150));
        lightModePnl.setPreferredSize(new java.awt.Dimension(150, 150));

        lightImageLbl.setText("Hello");

        lightModeWelcomeLbl.setText("Welcome Admin!");

        selectLightModeRadioBtn.setText("Light Mode");
        selectLightModeRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectLightModeRadioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lightModePnlLayout = new javax.swing.GroupLayout(lightModePnl);
        lightModePnl.setLayout(lightModePnlLayout);
        lightModePnlLayout.setHorizontalGroup(
            lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lightModePnlLayout.createSequentialGroup()
                .addGroup(lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lightModePnlLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(lightImageLbl))
                    .addGroup(lightModePnlLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectLightModeRadioBtn)
                            .addComponent(lightModeWelcomeLbl))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        lightModePnlLayout.setVerticalGroup(
            lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lightModePnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lightImageLbl)
                .addGap(28, 28, 28)
                .addComponent(lightModeWelcomeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectLightModeRadioBtn)
                .addGap(39, 39, 39))
        );

        backgroundModeSptPane.setLeftComponent(lightModePnl);

        optionMessageLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        optionMessageLbl.setText("Please Select the background mode");

        decorStandForSettingPnl.setBackground(new java.awt.Color(125, 162, 169, 80));

        javax.swing.GroupLayout decorStandForSettingPnlLayout = new javax.swing.GroupLayout(decorStandForSettingPnl);
        decorStandForSettingPnl.setLayout(decorStandForSettingPnlLayout);
        decorStandForSettingPnlLayout.setHorizontalGroup(
            decorStandForSettingPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        decorStandForSettingPnlLayout.setVerticalGroup(
            decorStandForSettingPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout settingPagePnlLayout = new javax.swing.GroupLayout(settingPagePnl);
        settingPagePnl.setLayout(settingPagePnlLayout);
        settingPagePnlLayout.setHorizontalGroup(
            settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingPagePnlLayout.createSequentialGroup()
                .addGap(369, 369, 369)
                .addComponent(optionMessageLbl)
                .addGap(236, 236, 236)
                .addComponent(decorStandForSettingPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(settingPagePnlLayout.createSequentialGroup()
                    .addGap(377, 377, 377)
                    .addComponent(backgroundModeSptPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(384, Short.MAX_VALUE)))
        );
        settingPagePnlLayout.setVerticalGroup(
            settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingPagePnlLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(optionMessageLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(settingPagePnlLayout.createSequentialGroup()
                .addComponent(decorStandForSettingPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(settingPagePnlLayout.createSequentialGroup()
                    .addGap(229, 229, 229)
                    .addComponent(backgroundModeSptPane, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(328, Short.MAX_VALUE)))
        );

        adminDashboardPagesPnl.add(settingPagePnl, "SettingPage");

        aboutUsPagePnl.setBackground(new java.awt.Color(250, 245, 239));
        aboutUsPagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aboutUsTitleLbl.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        aboutUsTitleLbl.setForeground(new java.awt.Color(14, 30, 63));
        aboutUsTitleLbl.setText("Contact our friendly team");
        aboutUsPagePnl.add(aboutUsTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, -1, 67));

        editBlogTxtArea.setColumns(20);
        editBlogTxtArea.setRows(5);
        editAreaScrlPnl.setViewportView(editBlogTxtArea);

        aboutUsPagePnl.add(editAreaScrlPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 580, 270));

        editForBlogBtn.setBackground(new java.awt.Color(14, 30, 63));
        editForBlogBtn.setForeground(new java.awt.Color(255, 255, 255));
        editForBlogBtn.setText("edit");
        editForBlogBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editForBlogBtnActionPerformed(evt);
            }
        });
        aboutUsPagePnl.add(editForBlogBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 550, 90, 30));

        aboutUsImageLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/Illustration_Vectorielle_De_Concept_Abstrait_De_Fête_D_auto-isolement_Célébration_Appel_Vidéo_En_Ligne_Heureux_Ami_Quarantaine_Amusant_éclosion_De_Coronavirus_Zoom_Vidéoconférence_Chat_Virtuel_Métapho.png"))); // NOI18N
        aboutUsPagePnl.add(aboutUsImageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 440, 380));

        instagramPnl.setBackground(new java.awt.Color(14, 30, 63));
        instagramPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(14, 30, 63)));

        instagramIdDetailsLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        instagramIdDetailsLbl.setForeground(new java.awt.Color(255, 255, 255));
        instagramIdDetailsLbl.setText("Instagram : knotspot33");

        javax.swing.GroupLayout instagramPnlLayout = new javax.swing.GroupLayout(instagramPnl);
        instagramPnl.setLayout(instagramPnlLayout);
        instagramPnlLayout.setHorizontalGroup(
            instagramPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instagramPnlLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(instagramIdDetailsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );
        instagramPnlLayout.setVerticalGroup(
            instagramPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(instagramIdDetailsLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        );

        aboutUsPagePnl.add(instagramPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 580, -1, 40));

        facebookPnl.setBackground(new java.awt.Color(14, 30, 63));

        facebookIdDetailsLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        facebookIdDetailsLbl.setForeground(new java.awt.Color(255, 255, 255));
        facebookIdDetailsLbl.setText("Facebook : knotspot Company");

        javax.swing.GroupLayout facebookPnlLayout = new javax.swing.GroupLayout(facebookPnl);
        facebookPnl.setLayout(facebookPnlLayout);
        facebookPnlLayout.setHorizontalGroup(
            facebookPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(facebookPnlLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(facebookIdDetailsLbl)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        facebookPnlLayout.setVerticalGroup(
            facebookPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(facebookIdDetailsLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        aboutUsPagePnl.add(facebookPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 640, -1, 40));

        decorStandAboutUsPnl.setBackground(new java.awt.Color(125, 162, 169, 80));

        javax.swing.GroupLayout decorStandAboutUsPnlLayout = new javax.swing.GroupLayout(decorStandAboutUsPnl);
        decorStandAboutUsPnl.setLayout(decorStandAboutUsPnlLayout);
        decorStandAboutUsPnlLayout.setHorizontalGroup(
            decorStandAboutUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        decorStandAboutUsPnlLayout.setVerticalGroup(
            decorStandAboutUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        aboutUsPagePnl.add(decorStandAboutUsPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, 150, 800));

        chatWithEmployeePnl.setBackground(new java.awt.Color(255, 255, 255));

        chatToEmployeeLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        chatToEmployeeLbl.setText("Chat to employees");

        speakToTeamLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        speakToTeamLbl.setText("speak to our team");

        emailLbl.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        emailLbl.setText("team@knotspot.com");
        emailLbl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        chatIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/chaticon_1.png"))); // NOI18N

        javax.swing.GroupLayout chatWithEmployeePnlLayout = new javax.swing.GroupLayout(chatWithEmployeePnl);
        chatWithEmployeePnl.setLayout(chatWithEmployeePnlLayout);
        chatWithEmployeePnlLayout.setHorizontalGroup(
            chatWithEmployeePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatWithEmployeePnlLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(chatWithEmployeePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chatIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speakToTeamLbl)
                    .addComponent(chatToEmployeeLbl)
                    .addComponent(emailLbl))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        chatWithEmployeePnlLayout.setVerticalGroup(
            chatWithEmployeePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chatWithEmployeePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chatIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chatToEmployeeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speakToTeamLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailLbl)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        aboutUsPagePnl.add(chatWithEmployeePnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 170, 130));

        visitUsPnl.setBackground(new java.awt.Color(255, 255, 255));

        visitUsLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        visitUsLbl.setText("Visit us");

        visitOfficeHqLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        visitOfficeHqLbl.setText("visit our office HQ");

        locationOnGoogleMapLbl.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        locationOnGoogleMapLbl.setText("view on google maps ");
        locationOnGoogleMapLbl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        mapIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/mapiconforreal.png"))); // NOI18N

        javax.swing.GroupLayout visitUsPnlLayout = new javax.swing.GroupLayout(visitUsPnl);
        visitUsPnl.setLayout(visitUsPnlLayout);
        visitUsPnlLayout.setHorizontalGroup(
            visitUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(visitUsPnlLayout.createSequentialGroup()
                .addGroup(visitUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(visitUsPnlLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(visitUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(visitOfficeHqLbl)
                            .addComponent(locationOnGoogleMapLbl)
                            .addComponent(visitUsLbl)))
                    .addGroup(visitUsPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mapIconLbl)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        visitUsPnlLayout.setVerticalGroup(
            visitUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, visitUsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(visitUsLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visitOfficeHqLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationOnGoogleMapLbl)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        aboutUsPagePnl.add(visitUsPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, -1));

        callUsPnl.setBackground(new java.awt.Color(255, 255, 255));

        callUsLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        callUsLbl.setText("Call us");

        timeToContactLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        timeToContactLbl.setText("Mon-Fri  From 10am to 5pm");

        contactNumberLbl.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        contactNumberLbl.setText("+(977) 9818736721");
        contactNumberLbl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        phoneIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/Telefone_PNG_Images___Vetores_E_Arquivos_PSD___Download_Grátis_Em_Pngtree-removebg-preview.png"))); // NOI18N

        javax.swing.GroupLayout callUsPnlLayout = new javax.swing.GroupLayout(callUsPnl);
        callUsPnl.setLayout(callUsPnlLayout);
        callUsPnlLayout.setHorizontalGroup(
            callUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(callUsPnlLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(callUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phoneIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeToContactLbl)
                    .addComponent(contactNumberLbl)
                    .addComponent(callUsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        callUsPnlLayout.setVerticalGroup(
            callUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, callUsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(phoneIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(callUsLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeToContactLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contactNumberLbl)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        aboutUsPagePnl.add(callUsPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 170, 130));

        followUsPnl.setBackground(new java.awt.Color(250, 245, 239));
        followUsPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        followUsLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        followUsLbl.setText("Follow Us");

        javax.swing.GroupLayout followUsPnlLayout = new javax.swing.GroupLayout(followUsPnl);
        followUsPnl.setLayout(followUsPnlLayout);
        followUsPnlLayout.setHorizontalGroup(
            followUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(followUsPnlLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(followUsLbl)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        followUsPnlLayout.setVerticalGroup(
            followUsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(followUsPnlLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(followUsLbl)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        aboutUsPagePnl.add(followUsPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 510, 220, 60));

        adminDashboardPagesPnl.add(aboutUsPagePnl, "AboutUsPage");

        venueGalleryPagePnl.setBackground(new java.awt.Color(250, 245, 239));
        venueGalleryPagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        firstVenuePictureLbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        firstVenuePictureLbl.setText("Our venue pictures");
        venueGalleryPagePnl.add(firstVenuePictureLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(453, 19, -1, -1));

        venuePictureCollectionPnl.setBackground(new java.awt.Color(250, 245, 239));

        pictureTwo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/imagforpic2.jpg"))); // NOI18N
        pictureTwo.setMaximumSize(new java.awt.Dimension(400, 300));
        pictureTwo.setMinimumSize(new java.awt.Dimension(400, 300));
        pictureTwo.setPreferredSize(new java.awt.Dimension(400, 300));

        pictureThree.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/rrnn.jpg"))); // NOI18N

        pictureOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/rrr.jpg"))); // NOI18N

        pictureTwo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/imageforpic3.jpg"))); // NOI18N

        javax.swing.GroupLayout venuePictureCollectionPnlLayout = new javax.swing.GroupLayout(venuePictureCollectionPnl);
        venuePictureCollectionPnl.setLayout(venuePictureCollectionPnlLayout);
        venuePictureCollectionPnlLayout.setHorizontalGroup(
            venuePictureCollectionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(venuePictureCollectionPnlLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(venuePictureCollectionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pictureOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pictureTwo1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(venuePictureCollectionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pictureTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pictureThree))
                .addContainerGap(497, Short.MAX_VALUE))
        );
        venuePictureCollectionPnlLayout.setVerticalGroup(
            venuePictureCollectionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(venuePictureCollectionPnlLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(venuePictureCollectionPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(venuePictureCollectionPnlLayout.createSequentialGroup()
                        .addComponent(pictureThree)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pictureTwo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(venuePictureCollectionPnlLayout.createSequentialGroup()
                        .addComponent(pictureOne)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pictureTwo1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 188, Short.MAX_VALUE))
        );

        venueGalleryPagePnl.add(venuePictureCollectionPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 77, -1, -1));

        adminDashboardPagesPnl.add(venueGalleryPagePnl, "VenueGalleryPage");

        topContainerNavPnl.setBackground(new java.awt.Color(14, 30, 63));
        topContainerNavPnl.setMaximumSize(new java.awt.Dimension(208, 232));
        topContainerNavPnl.setMinimumSize(new java.awt.Dimension(208, 232));

        manageVenueNavPnl.setBackground(new java.awt.Color(14, 30, 63));
        manageVenueNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        manageVenueNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manageVenueNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                manageVenueNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                manageVenueNavPnlMouseExited(evt);
            }
        });

        manageVenueNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        manageVenueNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        manageVenueNavLbl.setText("  Manage Venues");

        manageVenueIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/manageicon.png"))); // NOI18N

        javax.swing.GroupLayout manageVenueNavPnlLayout = new javax.swing.GroupLayout(manageVenueNavPnl);
        manageVenueNavPnl.setLayout(manageVenueNavPnlLayout);
        manageVenueNavPnlLayout.setHorizontalGroup(
            manageVenueNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageVenueNavPnlLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(manageVenueIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(manageVenueNavLbl)
                .addGap(12, 12, 12))
        );
        manageVenueNavPnlLayout.setVerticalGroup(
            manageVenueNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageVenueNavPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manageVenueNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manageVenueIconLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manageVenueNavLbl))
                .addContainerGap())
        );

        aboutUsNavPnl.setBackground(new java.awt.Color(14, 30, 63));
        aboutUsNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        aboutUsNavPnl.setPreferredSize(new java.awt.Dimension(115, 37));
        aboutUsNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutUsNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aboutUsNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aboutUsNavPnlMouseExited(evt);
            }
        });

        aboutUsNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        aboutUsNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        aboutUsNavLbl.setText("  about us");
        aboutUsNavLbl.setAutoscrolls(true);

        aboutUsIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/OIP__1_-removebg-preview.png"))); // NOI18N

        javax.swing.GroupLayout aboutUsNavPnlLayout = new javax.swing.GroupLayout(aboutUsNavPnl);
        aboutUsNavPnl.setLayout(aboutUsNavPnlLayout);
        aboutUsNavPnlLayout.setHorizontalGroup(
            aboutUsNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutUsNavPnlLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(aboutUsIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aboutUsNavLbl)
                .addContainerGap(46, Short.MAX_VALUE))
        );
        aboutUsNavPnlLayout.setVerticalGroup(
            aboutUsNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutUsNavPnlLayout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(aboutUsIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(aboutUsNavPnlLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(aboutUsNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout topContainerNavPnlLayout = new javax.swing.GroupLayout(topContainerNavPnl);
        topContainerNavPnl.setLayout(topContainerNavPnlLayout);
        topContainerNavPnlLayout.setHorizontalGroup(
            topContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topContainerNavPnlLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(topContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aboutUsNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageVenueNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topContainerNavPnlLayout.setVerticalGroup(
            topContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topContainerNavPnlLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(manageVenueNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(aboutUsNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        middleContainerNavPnl.setBackground(new java.awt.Color(14, 30, 63));
        middleContainerNavPnl.setMaximumSize(new java.awt.Dimension(208, 232));
        middleContainerNavPnl.setMinimumSize(new java.awt.Dimension(208, 232));
        middleContainerNavPnl.setPreferredSize(new java.awt.Dimension(208, 232));

        venueGalleryNavPnl.setBackground(new java.awt.Color(14, 30, 63));
        venueGalleryNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        venueGalleryNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                venueGalleryNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venueGalleryNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venueGalleryNavPnlMouseExited(evt);
            }
        });

        venueGalleryNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        venueGalleryNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        venueGalleryNavLbl.setText("Venue Gallery");
        venueGalleryNavLbl.setAutoscrolls(true);

        venueGalleryIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/galleryicon.png"))); // NOI18N

        javax.swing.GroupLayout venueGalleryNavPnlLayout = new javax.swing.GroupLayout(venueGalleryNavPnl);
        venueGalleryNavPnl.setLayout(venueGalleryNavPnlLayout);
        venueGalleryNavPnlLayout.setHorizontalGroup(
            venueGalleryNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, venueGalleryNavPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(venueGalleryIconLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(venueGalleryNavLbl)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        venueGalleryNavPnlLayout.setVerticalGroup(
            venueGalleryNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, venueGalleryNavPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(venueGalleryIconLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(venueGalleryNavPnlLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(venueGalleryNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        settingNavPnl.setBackground(new java.awt.Color(14, 30, 63));
        settingNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        settingNavPnl.setPreferredSize(new java.awt.Dimension(139, 51));
        settingNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingNavPnlMouseExited(evt);
            }
        });

        settingNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        settingNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        settingNavLbl.setText("  Settings");
        settingNavLbl.setAutoscrolls(true);

        settingIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/settingiconimg.png"))); // NOI18N

        javax.swing.GroupLayout settingNavPnlLayout = new javax.swing.GroupLayout(settingNavPnl);
        settingNavPnl.setLayout(settingNavPnlLayout);
        settingNavPnlLayout.setHorizontalGroup(
            settingNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingNavPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(settingIconLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(settingNavLbl)
                .addGap(46, 46, 46))
        );
        settingNavPnlLayout.setVerticalGroup(
            settingNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingNavPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(settingIconLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingNavPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(settingNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout middleContainerNavPnlLayout = new javax.swing.GroupLayout(middleContainerNavPnl);
        middleContainerNavPnl.setLayout(middleContainerNavPnlLayout);
        middleContainerNavPnlLayout.setHorizontalGroup(
            middleContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middleContainerNavPnlLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(middleContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(venueGalleryNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        middleContainerNavPnlLayout.setVerticalGroup(
            middleContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middleContainerNavPnlLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(venueGalleryNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(settingNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bottomContainerNavPnl.setBackground(new java.awt.Color(14, 30, 63));

        logOutNavPnl.setBackground(new java.awt.Color(14, 30, 63));
        logOutNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        logOutNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutNavPnlMouseExited(evt);
            }
        });

        logOutNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        logOutNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        logOutNavLbl.setText("Log Out");
        logOutNavLbl.setAutoscrolls(true);
        logOutNavLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutNavLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout logOutNavPnlLayout = new javax.swing.GroupLayout(logOutNavPnl);
        logOutNavPnl.setLayout(logOutNavPnlLayout);
        logOutNavPnlLayout.setHorizontalGroup(
            logOutNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logOutNavPnlLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(logOutNavLbl)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        logOutNavPnlLayout.setVerticalGroup(
            logOutNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logOutNavPnlLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(logOutNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bottomContainerNavPnlLayout = new javax.swing.GroupLayout(bottomContainerNavPnl);
        bottomContainerNavPnl.setLayout(bottomContainerNavPnlLayout);
        bottomContainerNavPnlLayout.setHorizontalGroup(
            bottomContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomContainerNavPnlLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(logOutNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bottomContainerNavPnlLayout.setVerticalGroup(
            bottomContainerNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomContainerNavPnlLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(logOutNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        headerPnl.setBackground(new java.awt.Color(255, 255, 255));

        logoLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/imagelogo.png"))); // NOI18N

        companyNameLbl.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        companyNameLbl.setText("Knotspot");

        profileLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/loginprofile.jpg"))); // NOI18N

        activeAdminMsgLbl.setFont(new java.awt.Font("SansSerif", 0, 10)); // NOI18N
        activeAdminMsgLbl.setText("Active user");

        javax.swing.GroupLayout headerPnlLayout = new javax.swing.GroupLayout(headerPnl);
        headerPnl.setLayout(headerPnlLayout);
        headerPnlLayout.setHorizontalGroup(
            headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(companyNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(994, 994, 994)
                .addComponent(activeAdminMsgLbl)
                .addGap(18, 18, 18)
                .addComponent(profileLbl)
                .addContainerGap())
        );
        headerPnlLayout.setVerticalGroup(
            headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPnlLayout.createSequentialGroup()
                        .addGroup(headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(profileLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(activeAdminMsgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPnlLayout.createSequentialGroup()
                        .addGroup(headerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(companyNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        adminSignPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adminDashboardTitleLbl.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        adminDashboardTitleLbl.setForeground(new java.awt.Color(255, 255, 255));
        adminDashboardTitleLbl.setText("Admin Dashboard");
        adminSignPnl.add(adminDashboardTitleLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        adminDashboardSmallIconLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/imagedown.jpg"))); // NOI18N
        adminDashboardSmallIconLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminDashboardSmallIconLblMouseClicked(evt);
            }
        });
        adminSignPnl.add(adminDashboardSmallIconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 74));

        javax.swing.GroupLayout navigationContainerPnlLayout = new javax.swing.GroupLayout(navigationContainerPnl);
        navigationContainerPnl.setLayout(navigationContainerPnlLayout);
        navigationContainerPnlLayout.setHorizontalGroup(
            navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationContainerPnlLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationContainerPnlLayout.createSequentialGroup()
                        .addGroup(navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(middleContainerNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(topContainerNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(adminSignPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(bottomContainerNavPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(adminDashboardPagesPnl, javax.swing.GroupLayout.DEFAULT_SIZE, 1066, Short.MAX_VALUE))
            .addComponent(headerPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        navigationContainerPnlLayout.setVerticalGroup(
            navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationContainerPnlLayout.createSequentialGroup()
                .addComponent(headerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(adminDashboardPagesPnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                    .addGroup(navigationContainerPnlLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(adminSignPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(topContainerNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(middleContainerNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bottomContainerNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout adminDashboardPagePnlLayout = new javax.swing.GroupLayout(adminDashboardPagePnl);
        adminDashboardPagePnl.setLayout(adminDashboardPagePnlLayout);
        adminDashboardPagePnlLayout.setHorizontalGroup(
            adminDashboardPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navigationContainerPnl, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        adminDashboardPagePnlLayout.setVerticalGroup(
            adminDashboardPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashboardPagePnlLayout.createSequentialGroup()
                .addComponent(navigationContainerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        containerPnl.add(adminDashboardPagePnl, "AdminScreen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void defaultInitializedTableData() {
        addDemoVenue(new VenueModel(20423, "SmartPalace", "Basantapur", "kathmandu", "9823733980", "Meeting Conference", 200, 23000));
        addDemoVenue(new VenueModel(20890, "VivahPalace", "Bouddha", "Dharan", "9823722970", "Hall", 100, 30000));
        addDemoVenue(new VenueModel(20490, "TajPalace", "Lalitpur", "kathmandu", "9823733970", "Hall", 120, 15000));
    }

    private void addDemoVenue(VenueModel venue) {
        venueDetails.add(venue);
        defaultTableModel.addRow(new Object[]{venue.getVenueId(), venue.getVenueName(), venue.getAddress(), venue.getCity(), venue.getContactNumber(), venue.getVenueType(), venue.getCapacity(), venue.getRentFee()});
        DefaultTableCellRenderer columnDataRenderer = new DefaultTableCellRenderer();
        columnDataRenderer.setHorizontalAlignment(SwingConstants.LEFT);
        venueModifyTbl.getColumnModel().getColumn(0).setCellRenderer(columnDataRenderer);
        venueModifyTbl.getColumnModel().getColumn(4).setCellRenderer(columnDataRenderer);
        venueModifyTbl.getColumnModel().getColumn(6).setCellRenderer(columnDataRenderer);
        venueModifyTbl.getColumnModel().getColumn(7).setCellRenderer(columnDataRenderer);
        totalVenueNumberLbl.setText(String.valueOf(venueModifyTbl.getRowCount()));
    }

    private void displayTableOnHome(List<VenueModel> venueDetails) {

        DefaultTableModel frontTableModel = (DefaultTableModel) frontDisplayTable.getModel();

        frontTableModel.setRowCount(0);
        for (VenueModel venues : venueDetails) {
            frontTableModel.addRow(new Object[]{venues.getVenueId(), venues.getVenueName(), venues.getAddress(), venues.getCity(), venues.getContactNumber(), venues.getVenueType(), venues.getCapacity(), venues.getRentFee()});

        }

        DefaultTableCellRenderer columnDataRenderer = new DefaultTableCellRenderer();
        columnDataRenderer.setHorizontalAlignment(SwingConstants.LEFT);
        frontDisplayTable.getColumnModel().getColumn(0).setCellRenderer(columnDataRenderer);
        frontDisplayTable.getColumnModel().getColumn(4).setCellRenderer(columnDataRenderer);
        frontDisplayTable.getColumnModel().getColumn(6).setCellRenderer(columnDataRenderer);
        frontDisplayTable.getColumnModel().getColumn(7).setCellRenderer(columnDataRenderer);

    }

    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(50);
                    publish(i);
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                loadingPagePrgBar.setValue(progress);
                loadingValueLbl.setText(progress + "%");
                if (progress == 10) {
                    loadingSymbolLbl.setText("welcome to our system...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture6.png");
                    firstPopUpImage.setIcon(icon);
                }
                if (progress == 30) {
                    loadingSymbolLbl.setText("10 venues are ready to be booked...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture3.png");
                    secondPopUpImage.setIcon(icon);
                    companyTitleLbl.setForeground(Color.decode("#2B3D5B"));

                }
                if (progress == 50) {
                    loadingSymbolLbl.setText("let us join in your new innings...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "imageforback2.png");
                    thirdPopUpImage.setIcon(icon);
                    companyTitleLbl.setForeground(Color.decode("#000000"));
                }
                if (progress == 70) {
                    loadingSymbolLbl.setText("happy weddings...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "imageforback3.png");
                    fourthPopUpImage.setIcon(icon);
                    companyTitleLbl.setForeground(Color.decode("#2B3D5B"));
                }
                if (progress == 90) {
                    loadingSymbolLbl.setText("Manage stuffs...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture4.png");
                    fifthPopUpImage.setIcon(icon);
                    companyTitleLbl.setForeground(Color.decode("#000000"));
                }
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen");
            }
        };
        worker.execute();
    }

    private void loadScreen(String screenName) {
        cardLayout = (CardLayout) containerPnl.getLayout();
        cardLayout.show(containerPnl, screenName);
    }

    private void loadNavRelatedPage(String screenName) {
        cardLayoutForadminDashboard = (CardLayout) adminDashboardPagesPnl.getLayout();
        cardLayoutForadminDashboard.show(adminDashboardPagesPnl, screenName);
    }

    private void showPopDialog(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }

    private void editComboBoxItem(JComboBox comboBox, int selectedRow, int column) {

        int index = comboBox.getItemCount();
        for (int i = 0; i < index; i++) {
            String item = comboBox.getItemAt(i).toString();
            if (venueModifyTbl.getValueAt(selectedRow, column).toString().equals(item)) {
                comboBox.setSelectedItem(item);
            }
        }
    }

    private void resetInputDetails() {
        inputVenueIdTxtFld.setText("");
        inputVenueNameTxtFld.setText("");
        inputVenueAddressTxtFld.setText("");
        inputVenueContactTxtFld.setText("");
        inputVenueTypeComboBx.setSelectedItem(inputVenueTypeComboBx.getItemAt(0));
        inputVenueCityComboBx.setSelectedItem(inputVenueCityComboBx.getItemAt(0));
        inputVenueCapacitySlider.setValue(50);
        inputPerPlatePriceSlider.setValue(50);
    }

    private void loadTableData(List<VenueModel> venueDetails) {

        defaultTableModel.setRowCount(0);
        for (VenueModel venues : venueDetails) {
            defaultTableModel.addRow(new Object[]{venues.getVenueId(), venues.getVenueName(), venues.getAddress(), venues.getCity(), venues.getContactNumber(), venues.getVenueType(), venues.getCapacity(), venues.getRentFee()});

        }

    }


    private void inputUsernameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUsernameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputUsernameTxtFldActionPerformed
    /**
     * The username and password field are stored in a variable the if-else
     * condition checks the possibility of combine empty, single empty and if
     * not the username and password are compared to check if the predefined
     * password is typed at last sets all the text fields and check box to
     * unchecked and empty
     *
     * @param evt
     */
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:

        String username = inputUsernameTxtFld.getText();
        String password = new String(inputPasswordPwdFld.getPassword());
        if (username.isEmpty() && password.isEmpty() || username.equals("Enter username") && password.equals("Enter password")) {
            ValidationUtil.authenticationColor(inputUsernameErrorLbl, new Color(255, 255, 255), Color.RED, true, "Please enter your username");
            ValidationUtil.authenticationColor(inputPasswordErrorPwdLbl, new Color(255, 255, 255), Color.RED, true, "Please enter your password");
            return;

        } else if (username.isEmpty() || username.equals("Enter username")) {
            ValidationUtil.authenticationColor(inputUsernameErrorLbl, new Color(255, 255, 255), Color.RED, true, "Please enter your username");
            inputPasswordErrorPwdLbl.setText("");
            return;

        } else if (password.isEmpty() || password.equals("Enter password")) {
            ValidationUtil.authenticationColor(inputPasswordErrorPwdLbl, new Color(255, 255, 255), Color.RED, true, "Please enter your password");
            inputUsernameErrorLbl.setText("");
            return;

        } else {
            boolean isValidUsername = username.equals("admin");
            boolean isValidPassword = password.equals("admin");

            if (!isValidUsername && !isValidPassword) {

                ValidationUtil.authenticationColor(inputUsernameErrorLbl, new Color(255, 255, 255), Color.RED, true, "Your username is incorrect");
                ValidationUtil.authenticationColor(inputPasswordErrorPwdLbl, new Color(255, 255, 255), Color.RED, true, "Your password is incorrect");

            } else if (!isValidUsername) {
                ValidationUtil.authenticationColor(inputUsernameErrorLbl, new Color(255, 255, 255), Color.RED, true, "Your username is incorrect");
                inputPasswordErrorPwdLbl.setText("");
            } else if (!isValidPassword) {
                ValidationUtil.authenticationColor(inputPasswordErrorPwdLbl, new Color(255, 255, 255), Color.RED, true, "Your password is incorrect");
                inputUsernameErrorLbl.setText("");
            } else {
                inputUsernameErrorLbl.setText("");
                inputPasswordErrorPwdLbl.setText("");
                inputUsernameTxtFld.setText("");
                inputPasswordPwdFld.setText("");
                showPwdCheckBx.setSelected(false);
                loadScreen("AdminScreen");
            }
        }


    }//GEN-LAST:event_loginBtnActionPerformed

    private void inputPasswordPwdFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPasswordPwdFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPasswordPwdFldActionPerformed

    private void inputVenueNameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueNameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueNameTxtFldActionPerformed

    private void inputVenueAddressTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueAddressTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueAddressTxtFldActionPerformed

    private void manageVenueNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageVenueNavPnlMouseClicked
        // TODO add your handling code here:
        manageVenueNavPnl.setBackground(Color.WHITE);
        manageVenueNavLbl.setForeground(Color.decode("#0E1E3F"));
        loadNavRelatedPage("ManageVenuePage");
    }//GEN-LAST:event_manageVenueNavPnlMouseClicked

    private void manageVenueNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageVenueNavPnlMouseEntered
        // TODO add your handling code here:
        manageVenueNavPnl.setBackground(Color.decode("#FFFFFF"));
        manageVenueNavLbl.setBackground(Color.decode("#FFFFFF"));
        manageVenueNavLbl.setForeground(Color.decode("#0E1E3F"));


    }//GEN-LAST:event_manageVenueNavPnlMouseEntered

    private void manageVenueNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageVenueNavPnlMouseExited
        // TODO add your handling code here:
        manageVenueNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        manageVenueNavPnl.setBackground(Color.decode("#0E1E3F"));
        manageVenueNavLbl.setBackground(Color.decode("#0E1E3F"));
        manageVenueNavLbl.setForeground(Color.decode("#FFFFFF"));


    }//GEN-LAST:event_manageVenueNavPnlMouseExited

    private void settingNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingNavPnlMouseClicked
        // TODO add your handling code here:
        settingNavPnl.setBackground(Color.WHITE);
        settingNavPnl.setForeground(Color.decode("#0E1E3F"));

        loadNavRelatedPage("SettingPage");
    }//GEN-LAST:event_settingNavPnlMouseClicked

    private void settingNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingNavPnlMouseEntered
        // TODO add your handling code here:
        settingNavPnl.setBackground(Color.decode("#FFFFFF"));
        settingNavPnl.setBackground(Color.decode("#FFFFFF"));
        settingNavLbl.setForeground(Color.decode("#0E1E3F"));
    }//GEN-LAST:event_settingNavPnlMouseEntered

    private void settingNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingNavPnlMouseExited
        // TODO add your handling code here:
        settingNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        settingNavPnl.setBackground(Color.decode("#0E1E3F"));
        settingNavLbl.setBackground(Color.decode("#0E1E3F"));
        settingNavLbl.setForeground(Color.decode("#FFFFFF"));
        settingNavPnl.setForeground(Color.decode("#FFFFFF"));
    }//GEN-LAST:event_settingNavPnlMouseExited

    private void logOutNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavPnlMouseClicked
        // TODO add your handling code here:
        logOutNavPnl.setBackground(Color.WHITE);
        logOutNavPnl.setForeground(Color.decode("#0E1E3F"));
        logOutNavLbl.setForeground(Color.decode("#0E1E3F"));
        resetInputDetails();
        loadScreen("LoginScreen");
    }//GEN-LAST:event_logOutNavPnlMouseClicked

    private void logOutNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavPnlMouseEntered
        // TODO add your handling code here:
        logOutNavPnl.setBackground(Color.WHITE);
        logOutNavPnl.setForeground(Color.decode("#0E1E3F"));
        logOutNavLbl.setForeground(Color.decode("#0E1E3F"));
    }//GEN-LAST:event_logOutNavPnlMouseEntered

    private void logOutNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavPnlMouseExited
        // TODO add your handling code here:
        logOutNavPnl.setBackground(Color.decode("#0E1E3F"));
        logOutNavPnl.setForeground(Color.WHITE);
        logOutNavLbl.setForeground(Color.WHITE);
    }//GEN-LAST:event_logOutNavPnlMouseExited

    private void inputVenueIdTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueIdTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueIdTxtFldActionPerformed

    private void addVenueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVenueBtnActionPerformed
        // TODO add your handling code here:
        int venueId = 0;
        String venueName = null;
        String venueAddress = null;
        String venueCity = String.valueOf(inputVenueCityComboBx.getSelectedItem());
        String venueContactNumber = null;
        String venueType = String.valueOf(inputVenueTypeComboBx.getSelectedItem());
        int venueCapacity = inputVenueCapacitySlider.getValue();
        int perPlatePrice = inputPerPlatePriceSlider.getValue();
        int venueRentFee = venueCapacity * perPlatePrice;

        boolean isValid = true;

        try {
            ValidationUtil.isIdValid(inputVenueIdTxtFld.getText(), "ID");
            venueId = Integer.parseInt(inputVenueIdTxtFld.getText());
            ValidationUtil.venueValidateColor(inputVenueIdTxtFld, idErrorMsgLbl, Color.WHITE, Color.BLACK, "", "Venue Id");
        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException e) {
            ValidationUtil.venueValidateColor(inputVenueIdTxtFld, idErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Venue Id");
            isValid = false; //exception
        }

        try {
            ValidationUtil.isNameValid(inputVenueNameTxtFld.getText(), "Name");
            venueName = inputVenueNameTxtFld.getText();
            ValidationUtil.venueValidateColor(inputVenueNameTxtFld, nameErrorMsgLbl, Color.WHITE, Color.BLACK, "", "Venue Name");
        } catch (NullPointerException | NumberFormatException e) {
            ValidationUtil.venueValidateColor(inputVenueNameTxtFld, nameErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Venue Name");
            isValid = false; //exception
        } catch (IllegalArgumentException e) {
            ValidationUtil.venueValidateColor(inputVenueNameTxtFld, nameErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Venue Name");
        }

        try {
            ValidationUtil.isAddressValid(inputVenueAddressTxtFld.getText(), "Address");
            venueAddress = inputVenueAddressTxtFld.getText();
            ValidationUtil.venueValidateColor(inputVenueAddressTxtFld, addressErrorMsgLbl, Color.WHITE, Color.BLACK, "", "Address");
        } catch (NullPointerException | NumberFormatException e) {
            ValidationUtil.venueValidateColor(inputVenueAddressTxtFld, addressErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Address");
            isValid = false; //exception
        } catch (IllegalArgumentException e) {
            ValidationUtil.venueValidateColor(inputVenueAddressTxtFld, addressErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Address");
        }

        try {
            ValidationUtil.isContactValid(inputVenueContactTxtFld.getText(), "Contact number");
            venueContactNumber = inputVenueContactTxtFld.getText();
            ValidationUtil.venueValidateColor(inputVenueContactTxtFld, contactErrorMsgLbl, Color.WHITE, Color.BLACK, "", "Contact Number");
        } catch (NullPointerException | NumberFormatException e) {
            ValidationUtil.venueValidateColor(inputVenueContactTxtFld, contactErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Contact Number");
            isValid = false; //exception
        }

        if (isValid) {
            //to check if the details are repeated to add 
            if (!ValidationUtil.isDuplicate(venueDetails, venueId, venueContactNumber)) {
                VenueModel venue = new VenueModel(venueId, venueName, venueAddress, venueCity, venueContactNumber, venueType, venueCapacity, venueRentFee);
                venueDetails.add(venue);
                displayTableOnHome(venueDetails);
                //load data to table
                defaultTableModel.addRow(new Object[]{venueId, venueName, venueAddress, venueCity, venueContactNumber, venueType, venueCapacity, venueRentFee});
                showPopDialog("The venue is added successfully", "New Venue Entry", JOptionPane.INFORMATION_MESSAGE);
                resetInputDetails();
                totalVenueNumberLbl.setText(String.valueOf(venueModifyTbl.getRowCount()));

            } else {
                showPopDialog("The same venue cannot be duplicated", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
                resetInputDetails();
            }

        }


    }//GEN-LAST:event_addVenueBtnActionPerformed

    private void inputVenueContactTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueContactTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueContactTxtFldActionPerformed

    private void showPwdCheckBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPwdCheckBxActionPerformed
        // TODO add your handling code here:
        if (showPwdCheckBx.isSelected()) {
            inputPasswordPwdFld.setEchoChar((char) 0);
        } else {
            inputPasswordPwdFld.setEchoChar('*');
        }
    }//GEN-LAST:event_showPwdCheckBxActionPerformed

    private void editVenueDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editVenueDetailsBtnActionPerformed
        // TODO add your handling code here:
        //to get selected row into the text field
        int rows = venueModifyTbl.getRowCount();
        int selectedRow = venueModifyTbl.getSelectedRow();

        if (rows != 0) {
            if (selectedRow >= 0 && venueModifyTbl.getSelectedRowCount() == 1) {
                venueIdOnPopUpMsgFld.setText(venueModifyTbl.getValueAt(selectedRow, 0).toString());
                venueNameOnPopUpMsgFld.setText(venueModifyTbl.getValueAt(selectedRow, 1).toString());
                venueAddressOnPopUpMsgFld.setText(venueModifyTbl.getValueAt(selectedRow, 2).toString());
                editComboBoxItem(inputVenueCityComboBx1, selectedRow, 3);
                venueContactOnPopUpMsgFld.setText(venueModifyTbl.getValueAt(selectedRow, 4).toString());
                editComboBoxItem(inputVenueTypeComboBx1, selectedRow, 5);
                inputVenueCapacitySlider1.setValue(Integer.parseInt(venueModifyTbl.getValueAt(selectedRow, 6).toString()));
                inputPerPlatePriceSlider1.setValue((Integer.parseInt(venueModifyTbl.getValueAt(selectedRow, 7).toString())) / (Integer.parseInt(venueModifyTbl.getValueAt(selectedRow, 6).toString())));

            }
        }

        getRootPane().getGlassPane().setVisible(true);
        popUpDialog.setVisible(true);


    }//GEN-LAST:event_editVenueDetailsBtnActionPerformed

    private void removeVenueDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVenueDetailsBtnActionPerformed
        // TODO add your handling code here:
        if (venueModifyTbl.isEditing()) {
            venueModifyTbl.getCellEditor().stopCellEditing();

        }
        int response = JOptionPane.showConfirmDialog(this, "Do you want to really remove the venue?", "Remove venue confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            int venueIdColumn = 0;
            int selectedRow = venueModifyTbl.getSelectedRow();

            if (selectedRow >= 0) {
                int selectedRowVenueId = Integer.parseInt(defaultTableModel.getValueAt(selectedRow, venueIdColumn).toString());
                defaultTableModel.removeRow(selectedRow);

                for (VenueModel venues : venueDetails) {
                    if (venues.getVenueId() == selectedRowVenueId) {
                        venueDetails.remove(venues);
                        totalVenueNumberLbl.setText(String.valueOf(venueModifyTbl.getRowCount()));
                        displayTableOnHome(venueDetails);
                        return;
                    }
                }

            }

        }
    }//GEN-LAST:event_removeVenueDetailsBtnActionPerformed

    private void venueModifyTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venueModifyTblMouseClicked

    }//GEN-LAST:event_venueModifyTblMouseClicked

    private void aboutUsNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutUsNavPnlMouseClicked
        // TODO add your handling code here:
        aboutUsNavPnl.setBackground(Color.WHITE);
        aboutUsNavLbl.setForeground(Color.decode("#0E1E3F"));
        loadNavRelatedPage("AboutUsPage");
    }//GEN-LAST:event_aboutUsNavPnlMouseClicked

    private void aboutUsNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutUsNavPnlMouseEntered
        // TODO add your handling code here:
        aboutUsNavPnl.setBackground(Color.WHITE);
        aboutUsNavLbl.setForeground(Color.decode("#0E1E3F"));
    }//GEN-LAST:event_aboutUsNavPnlMouseEntered

    private void aboutUsNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutUsNavPnlMouseExited
        // TODO add your handling code here:
        aboutUsNavPnl.setBackground(Color.decode("#0E1E3F"));
        aboutUsNavLbl.setForeground(Color.WHITE);
    }//GEN-LAST:event_aboutUsNavPnlMouseExited

    private void venueGalleryNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venueGalleryNavPnlMouseClicked
        // TODO add your handling code here:
        venueGalleryNavPnl.setBackground(Color.WHITE);
        venueGalleryNavLbl.setForeground(Color.decode("#0E1E3F"));
        loadNavRelatedPage("VenueGalleryPage");
    }//GEN-LAST:event_venueGalleryNavPnlMouseClicked

    private void venueGalleryNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venueGalleryNavPnlMouseEntered
        // TODO add your handling code here:
        venueGalleryNavPnl.setBackground(Color.WHITE);
        venueGalleryNavLbl.setForeground(Color.decode("#0E1E3F"));
    }//GEN-LAST:event_venueGalleryNavPnlMouseEntered

    private void venueGalleryNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venueGalleryNavPnlMouseExited

        venueGalleryNavPnl.setBackground(Color.decode("#0E1E3F"));
        venueGalleryNavLbl.setForeground(Color.WHITE);
    }//GEN-LAST:event_venueGalleryNavPnlMouseExited

    private void logOutNavLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavLblMouseClicked

        inputUsernameTxtFld.setText("");
        inputPasswordPwdFld.setText("");
        loadScreen("LoginScreen");
    }//GEN-LAST:event_logOutNavLblMouseClicked

    private void inputVenueCapacitySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inputVenueCapacitySliderStateChanged

        capacityValueDisplayLbl.setText(String.valueOf(inputVenueCapacitySlider.getValue()));
    }//GEN-LAST:event_inputVenueCapacitySliderStateChanged

    private void inputPerPlatePriceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inputPerPlatePriceSliderStateChanged

        perPlatePriceDisplayLbl.setText(String.valueOf(inputPerPlatePriceSlider.getValue()));
    }//GEN-LAST:event_inputPerPlatePriceSliderStateChanged

    private void editVenueDetailsBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editVenueDetailsBtn2ActionPerformed

    }//GEN-LAST:event_editVenueDetailsBtn2ActionPerformed

    private void removeVenueDetailsBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVenueDetailsBtn2ActionPerformed

    }//GEN-LAST:event_removeVenueDetailsBtn2ActionPerformed

    private void selectLightModeRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectLightModeRadioBtnActionPerformed

        if (selectDarkModeRadioBtn.isSelected() == true) {
            settingPagePnl.setBackground(new Color(250, 245, 239));
            homePagePnl.setBackground(new Color(250, 245, 239));
            addVenuePagePnl.setBackground(new Color(250, 245, 239));
            aboutUsPagePnl.setBackground(new Color(250, 245, 239));
            venueGalleryPagePnl.setBackground(new Color(250, 245, 239));
            venuePictureCollectionPnl.setBackground(new Color(250, 245, 239));

        }
    }//GEN-LAST:event_selectLightModeRadioBtnActionPerformed

    private void selectDarkModeRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectDarkModeRadioBtnActionPerformed

        if (selectDarkModeRadioBtn.isSelected() == true) {
            settingPagePnl.setBackground(Color.decode("#937A62"));
            homePagePnl.setBackground(Color.decode("#937A62"));
            addVenuePagePnl.setBackground(Color.decode("#937A62"));
            aboutUsPagePnl.setBackground(Color.decode("#937A62"));
            venueGalleryPagePnl.setBackground(Color.decode("#937A62"));
            venuePictureCollectionPnl.setBackground(Color.decode("#937A62"));
        }
    }//GEN-LAST:event_selectDarkModeRadioBtnActionPerformed

    private void editForBlogBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editForBlogBtnActionPerformed

        if (editBlogTxtArea.getText().isBlank()) {
            showPopDialog("nothing to upload", "blog data", JOptionPane.ERROR_MESSAGE);
        } else {
            showPopDialog("edited successfully", "blog data", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_editForBlogBtnActionPerformed

    private void totalVenueNumberLblInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_totalVenueNumberLblInputMethodTextChanged


    }//GEN-LAST:event_totalVenueNumberLblInputMethodTextChanged

    private void adminDashboardSmallIconLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminDashboardSmallIconLblMouseClicked

        loadNavRelatedPage("HomePage");
    }//GEN-LAST:event_adminDashboardSmallIconLblMouseClicked

    private void inputUsernameTxtFldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputUsernameTxtFldFocusGained

        if (inputUsernameTxtFld.getText().equals("Enter username")) {
            inputUsernameTxtFld.setText("");
            inputUsernameTxtFld.setForeground(Color.decode("#000000"));
        }
    }//GEN-LAST:event_inputUsernameTxtFldFocusGained

    private void inputUsernameTxtFldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputUsernameTxtFldFocusLost

        if (inputUsernameTxtFld.getText().equals("")) {
            inputUsernameTxtFld.setText("Enter username");
            inputUsernameTxtFld.setForeground(Color.decode("#CCCCCC"));
        }
    }//GEN-LAST:event_inputUsernameTxtFldFocusLost

    private void inputPasswordPwdFldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputPasswordPwdFldFocusGained

        if (String.valueOf(inputPasswordPwdFld.getPassword()).equals("Enter password")) {
            inputPasswordPwdFld.setText("");
            inputPasswordPwdFld.setForeground(Color.decode("#000000"));
            inputPasswordPwdFld.setEchoChar('\u2022');
        }
    }//GEN-LAST:event_inputPasswordPwdFldFocusGained

    private void inputPasswordPwdFldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputPasswordPwdFldFocusLost

        if (String.valueOf(inputPasswordPwdFld.getPassword()).equals("")) {
            inputPasswordPwdFld.setText("Enter password");
            inputPasswordPwdFld.setForeground(Color.decode("#CCCCCC"));
            inputPasswordPwdFld.setEchoChar('\u0000');
        }
    }//GEN-LAST:event_inputPasswordPwdFldFocusLost

    private void venueAddressOnPopUpMsgFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_venueAddressOnPopUpMsgFldActionPerformed

    }//GEN-LAST:event_venueAddressOnPopUpMsgFldActionPerformed

    private void updateVenueDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateVenueDetailsBtnActionPerformed

        //presented data 
        int selectedRow = venueModifyTbl.getSelectedRow();
        String presentVenueName = venueModifyTbl.getValueAt(selectedRow, 1).toString();
        String presentVenueAddress = venueModifyTbl.getValueAt(selectedRow, 2).toString();
        String presentVenueCity = venueModifyTbl.getValueAt(selectedRow, 3).toString();
        String presentVenueContact = venueModifyTbl.getValueAt(selectedRow, 4).toString();
        String presentVenueType = venueModifyTbl.getValueAt(selectedRow, 5).toString();
        int presentVenueCapacity = Integer.parseInt(venueModifyTbl.getValueAt(selectedRow, 6).toString());
        int presentVenuePerPlatePrice = (Integer.parseInt(venueModifyTbl.getValueAt(selectedRow, 7).toString())) / presentVenueCapacity;

        //to check no input changes
        if (presentVenueName.equals(venueNameOnPopUpMsgFld.getText()) && presentVenueAddress.equals(venueAddressOnPopUpMsgFld.getText()) && presentVenueContact.equals(venueContactOnPopUpMsgFld.getText()) && presentVenueCity.equals(inputVenueCityComboBx1.getSelectedItem().toString()) && presentVenueType.equals(String.valueOf(inputVenueTypeComboBx1.getSelectedItem().toString())) && presentVenueCapacity == inputVenueCapacitySlider1.getValue() && presentVenuePerPlatePrice == inputPerPlatePriceSlider1.getValue()) {
            showPopDialog("NO changes was made", "No input change", JOptionPane.WARNING_MESSAGE);

        } else {
            //new data changes
            String editedVenueName = null;
            String editedVenueAddress = null;
            String editedVenueCity = String.valueOf(inputVenueCityComboBx1.getSelectedItem());
            String editedVenueContactNumber = null;
            String editedVenueType = String.valueOf(inputVenueTypeComboBx1.getSelectedItem());
            int editedVenueCapacity = inputVenueCapacitySlider1.getValue();
            int editedVenuePerPlatePrice = inputPerPlatePriceSlider1.getValue();
            int editedVenueRentFee = editedVenueCapacity * editedVenuePerPlatePrice;

            //check to see no changes made
            boolean isValid = true;

            try {
                ValidationUtil.isNameValid(venueNameOnPopUpMsgFld.getText(), "Name");
                editedVenueName = venueNameOnPopUpMsgFld.getText();
                ValidationUtil.venueValidateColor(venueNameOnPopUpMsgFld, inputVenueNameErrorMsgLbl, Color.WHITE, Color.BLACK, "", "Venue Name");
            } catch (NullPointerException | NumberFormatException e) {
                ValidationUtil.venueValidateColor(venueNameOnPopUpMsgFld, inputVenueNameErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Venue Name");
                isValid = false; //exception
            }

            try {
                ValidationUtil.isAddressValid(venueAddressOnPopUpMsgFld.getText(), "Address");
                editedVenueAddress = venueAddressOnPopUpMsgFld.getText();
                ValidationUtil.venueValidateColor(venueAddressOnPopUpMsgFld, inputVenueAddressErrorMsgLbl, Color.WHITE, Color.BLACK, "", "Address");
            } catch (NullPointerException | NumberFormatException e) {
                ValidationUtil.venueValidateColor(venueAddressOnPopUpMsgFld, inputVenueAddressErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Address");
                isValid = false; //exception
            }

            try {
                ValidationUtil.isContactValid(venueContactOnPopUpMsgFld.getText(), "Contact number");
                editedVenueContactNumber = venueContactOnPopUpMsgFld.getText();
                ValidationUtil.venueValidateColor(venueContactOnPopUpMsgFld, inputVenueContactErrorMsgLbl, Color.WHITE, Color.BLACK, "", "Contact Number");
            } catch (NullPointerException | NumberFormatException e) {
                ValidationUtil.venueValidateColor(venueContactOnPopUpMsgFld, inputVenueContactErrorMsgLbl, Color.RED, Color.RED, e.getMessage(), "Contact Number");
                isValid = false; //exception
            }

            if (isValid) {
                int response = JOptionPane.showConfirmDialog(this, "Do you want to really update the venue?", "Update venue confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (response == JOptionPane.YES_OPTION) {
                    VenueModel venue = venueDetails.get(selectedRow);
                    venue.setVenueName(editedVenueName);
                    venue.setAddress(editedVenueAddress);
                    venue.setCity(editedVenueCity);
                    venue.setContactNumber(editedVenueContactNumber);
                    venue.setVenueType(editedVenueType);
                    venue.setCapacity(editedVenueCapacity);
                    venue.setRentFee(editedVenueRentFee);

                    venueModifyTbl.setValueAt(editedVenueName, selectedRow, 1);
                    venueModifyTbl.setValueAt(editedVenueAddress, selectedRow, 2);
                    venueModifyTbl.setValueAt(editedVenueCity, selectedRow, 3);
                    venueModifyTbl.setValueAt(editedVenueContactNumber, selectedRow, 4);
                    venueModifyTbl.setValueAt(editedVenueType, selectedRow, 5);
                    venueModifyTbl.setValueAt(editedVenueCapacity, selectedRow, 6);
                    venueModifyTbl.setValueAt(editedVenueRentFee, selectedRow, 7);

                    showPopDialog("The venue has been successfully updated.", "Successful update", JOptionPane.INFORMATION_MESSAGE);
                    getRootPane().getGlassPane().setVisible(false);
                    popUpDialog.setVisible(false);
                    displayTableOnHome(venueDetails);

                }

            }

        }


    }//GEN-LAST:event_updateVenueDetailsBtnActionPerformed

    private void cancelVenueChangeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelVenueChangeBtnActionPerformed

        getRootPane().getGlassPane().setVisible(false);
        popUpDialog.setVisible(false);
    }//GEN-LAST:event_cancelVenueChangeBtnActionPerformed

    private void inputVenueCapacitySlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inputVenueCapacitySlider1StateChanged
        // TODO add your handling code here:
        showCapacityValueLbl.setText(String.valueOf(inputVenueCapacitySlider1.getValue()));
    }//GEN-LAST:event_inputVenueCapacitySlider1StateChanged

    private void inputPerPlatePriceSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inputPerPlatePriceSlider1StateChanged
        // TODO add your handling code here:
        showPerPlatePriceValueLbl.setText(String.valueOf(inputPerPlatePriceSlider1.getValue()));
    }//GEN-LAST:event_inputPerPlatePriceSlider1StateChanged

    private void inputSearchTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputSearchTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputSearchTxtFldActionPerformed

    private void sortByComboBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByComboBxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortByComboBxActionPerformed

    private void ascendSortOrderRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ascendSortOrderRadioBtnActionPerformed


    }//GEN-LAST:event_ascendSortOrderRadioBtnActionPerformed

    private void descendSortOrderRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descendSortOrderRadioBtnActionPerformed

    }//GEN-LAST:event_descendSortOrderRadioBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed

        List<VenueModel> copyOfVenueDetails = new ArrayList<>(venueDetails);
        List<VenueModel> allMatchedData = new ArrayList<>();

        if (inputSearchTxtFld.getText().isBlank()) {
            loadTableData(venueDetails);
        } else {
            if (ValidationUtil.isNumberForSearchValue(inputSearchTxtFld.getText())) {
                Sort.performInsertionSort(copyOfVenueDetails, false, "Id");
                List<VenueModel> foundMatchedId = BinarySearch.searchById(copyOfVenueDetails, inputSearchTxtFld.getText());
                loadTableData(foundMatchedId);
                if (foundMatchedId.isEmpty()) {
                    showPopDialog("The venue not found.", "Unmatched Value", JOptionPane.ERROR_MESSAGE);
                    loadTableData(venueDetails);
                }
            } else {
                if (ValidationUtil.isAlphabeticForSearchValue(inputSearchTxtFld.getText())) {
                    Sort.performInsertionSort(copyOfVenueDetails, false, "Name");
                    List<VenueModel> foundMatchedName = BinarySearch.searchByName(copyOfVenueDetails, inputSearchTxtFld.getText());
                    allMatchedData.addAll(foundMatchedName);

                    Sort.performSelectionSort(copyOfVenueDetails, false, "Type");
                    List<VenueModel> foundMatchedType = BinarySearch.searchByType(copyOfVenueDetails, inputSearchTxtFld.getText());
                    allMatchedData.addAll(foundMatchedType);
                    loadTableData(allMatchedData);
                    if (allMatchedData.isEmpty()) {
                        showPopDialog("The venue not found.", "Unmatched Value", JOptionPane.ERROR_MESSAGE);
                        loadTableData(venueDetails);
                    }
                }
            }

        }


    }//GEN-LAST:event_searchBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        loadTableData(venueDetails);
        inputSearchTxtFld.setText("");
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void filterContainerPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterContainerPnlMouseClicked

        filterPopUpPnl.setVisible(true);
    }//GEN-LAST:event_filterContainerPnlMouseClicked

    private void doFilterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doFilterBtnActionPerformed
        String sortBy = sortByComboBx.getSelectedItem().toString();
        if (ascendSortOrderRadioBtn.isSelected() && !sortBy.equals("Sort By")) {
            if (sortBy.equals("Id") || sortBy.equals("Name") || sortBy.equals("City")) {
                Sort.performInsertionSort(venueDetails, true, sortBy);
                loadTableData(venueDetails);
            } else if (sortBy.equals("Capacity")) {
                Sort.performSelectionSort(venueDetails, true, sortBy);
                loadTableData(venueDetails);
            } else if (sortBy.equals("Price")) {
                Sort.performMergeSort(venueDetails, true, sortBy);
                loadTableData(venueDetails);
            }

        } else if (descendSortOrderRadioBtn.isSelected() && !sortBy.equals("Sort By")) {
            if (sortBy.equals("Id") || sortBy.equals("Name") || sortBy.equals("City")) {
                Sort.performInsertionSort(venueDetails, false, sortBy);
                loadTableData(venueDetails);
            } else if (sortBy.equals("Capacity")) {
                Sort.performSelectionSort(venueDetails, false, sortBy);
                loadTableData(venueDetails);
            } else if (sortBy.equals("Price")) {
                Sort.performMergeSort(venueDetails, false, sortBy);
                loadTableData(venueDetails);
            }

        }

        filterPopUpPnl.setVisible(false);
        sortByComboBx.setSelectedIndex(0);
        sortButtonGroup.clearSelection();
    }//GEN-LAST:event_doFilterBtnActionPerformed

    private void sortByComboBxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sortByComboBxFocusGained

    }//GEN-LAST:event_sortByComboBxFocusGained

    private void searchBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseEntered

    }//GEN-LAST:event_searchBtnMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KnotSpot().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboutUsIconLbl;
    private javax.swing.JLabel aboutUsImageLbl;
    private javax.swing.JLabel aboutUsNavLbl;
    private javax.swing.JPanel aboutUsNavPnl;
    private javax.swing.JPanel aboutUsPagePnl;
    private javax.swing.JLabel aboutUsTitleLbl;
    private javax.swing.JLabel activeAdminMsgLbl;
    private javax.swing.JButton addVenueBtn;
    private javax.swing.JLayeredPane addVenueLayeredPnl;
    private javax.swing.JPanel addVenuePagePnl;
    private javax.swing.JLabel addressErrorMsgLbl;
    private javax.swing.JPanel adminDashboardPagePnl;
    private javax.swing.JPanel adminDashboardPagesPnl;
    private javax.swing.JLabel adminDashboardSmallIconLbl;
    private javax.swing.JLabel adminDashboardTitleLbl;
    private javax.swing.JPanel adminSignPnl;
    private javax.swing.JLabel adminWelcomeMsgLbl;
    private javax.swing.JRadioButton ascendSortOrderRadioBtn;
    private javax.swing.JSplitPane backgroundModeSptPane;
    private javax.swing.JPanel bottomContainerNavPnl;
    private javax.swing.JLabel callUsLbl;
    private javax.swing.JPanel callUsPnl;
    private javax.swing.JButton cancelVenueChangeBtn;
    private javax.swing.JLabel capacityValueDisplayLbl;
    private javax.swing.JLabel chatIconLbl;
    private javax.swing.JLabel chatToEmployeeLbl;
    private javax.swing.JPanel chatWithEmployeePnl;
    private javax.swing.JLabel companyNameLbl;
    private javax.swing.JLabel companyTitleLbl;
    private javax.swing.JLabel contactErrorMsgLbl;
    private javax.swing.JLabel contactNumberLbl;
    private javax.swing.JPanel containerPnl;
    private javax.swing.JLabel continueLbl;
    private javax.swing.JLabel customerVisitLbl;
    private javax.swing.JLabel customerVisitNumberLbl;
    private javax.swing.JPanel customerVisitsPnl;
    private javax.swing.JLabel darkImageLbl;
    private javax.swing.JPanel darkModePnl;
    private javax.swing.JLabel darkModeWelcomeLbl;
    private javax.swing.JPanel decorStandAboutUsPnl;
    private javax.swing.JPanel decorStandForSettingPnl;
    private javax.swing.JPanel decorStandForaddVenuePnl;
    private javax.swing.JPanel decorStandPnl;
    private javax.swing.JRadioButton descendSortOrderRadioBtn;
    private javax.swing.JLabel descriptionCustomerVisitLbl;
    private javax.swing.JLabel descriptionEmployeeLbl;
    private javax.swing.JLabel descriptionTotalRevenueLbl;
    private javax.swing.JLabel descriptionTotalVenueLbl;
    private javax.swing.JLabel detailTitleLbl;
    private javax.swing.JPanel detailsInputContainerPnl;
    private javax.swing.JPanel displayRealTimeDataPnl;
    private javax.swing.JButton doFilterBtn;
    private javax.swing.JScrollPane editAreaScrlPnl;
    private javax.swing.JTextArea editBlogTxtArea;
    private javax.swing.JPanel editColumnPnl;
    private javax.swing.JButton editForBlogBtn;
    private javax.swing.JPanel editInputPnl;
    private javax.swing.JButton editVenueDetailsBtn;
    private javax.swing.JButton editVenueDetailsBtn2;
    private javax.swing.JLabel emailLbl;
    private javax.swing.JLabel employeeLbl;
    private javax.swing.JLabel employeeNumberLbl;
    private javax.swing.JLabel facebookIdDetailsLbl;
    private javax.swing.JPanel facebookPnl;
    private javax.swing.JLabel fifthPopUpImage;
    private javax.swing.JPanel filterContainerPnl;
    private javax.swing.JLabel filterLbl;
    private javax.swing.JPanel filterPopUpPnl;
    private javax.swing.JLabel firstPopUpImage;
    private javax.swing.JLabel firstVenuePictureLbl;
    private javax.swing.JLabel followUsLbl;
    private javax.swing.JPanel followUsPnl;
    private javax.swing.JLabel forgotPwdLbl;
    private javax.swing.JLabel fourthPopUpImage;
    private javax.swing.JTable frontDisplayTable;
    private javax.swing.JPanel headerPnl;
    private javax.swing.JPanel homePagePnl;
    private javax.swing.JLabel idErrorMsgLbl;
    private javax.swing.JLabel inputCapacityLbl;
    private javax.swing.JLabel inputPasswordErrorPwdLbl;
    private javax.swing.JPasswordField inputPasswordPwdFld;
    private javax.swing.JLabel inputPerPlatePriceLbl;
    private javax.swing.JSlider inputPerPlatePriceSlider;
    private javax.swing.JSlider inputPerPlatePriceSlider1;
    private javax.swing.JTextField inputSearchTxtFld;
    private javax.swing.JLabel inputTitleLbl;
    private javax.swing.JLabel inputUsernameErrorLbl;
    private javax.swing.JTextField inputUsernameTxtFld;
    private javax.swing.JLabel inputVenueAddressErrorMsgLbl;
    private javax.swing.JTextField inputVenueAddressTxtFld;
    private javax.swing.JSlider inputVenueCapacitySlider;
    private javax.swing.JSlider inputVenueCapacitySlider1;
    private javax.swing.JComboBox<String> inputVenueCityComboBx;
    private javax.swing.JComboBox<String> inputVenueCityComboBx1;
    private javax.swing.JLabel inputVenueContactErrorMsgLbl;
    private javax.swing.JTextField inputVenueContactTxtFld;
    private javax.swing.JTextField inputVenueIdTxtFld;
    private javax.swing.JLabel inputVenueNameErrorMsgLbl;
    private javax.swing.JTextField inputVenueNameTxtFld;
    private javax.swing.JComboBox<String> inputVenueTypeComboBx;
    private javax.swing.JComboBox<String> inputVenueTypeComboBx1;
    private javax.swing.JScrollPane insertDataTableScrlPane;
    private javax.swing.JLabel instagramIdDetailsLbl;
    private javax.swing.JPanel instagramPnl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel lightImageLbl;
    private javax.swing.JPanel lightModePnl;
    private javax.swing.JLabel lightModeWelcomeLbl;
    private javax.swing.JPanel lineOnePnl;
    private javax.swing.JPanel lineTwoPnl;
    private javax.swing.JLabel loadingPageBackgroundLbl;
    private javax.swing.JPanel loadingPagePnl;
    private javax.swing.JProgressBar loadingPagePrgBar;
    private javax.swing.JLabel loadingSymbolLbl;
    private javax.swing.JLabel loadingValueLbl;
    private javax.swing.JLabel locationOnGoogleMapLbl;
    private javax.swing.JLabel logInContinueAllIconLbl;
    private javax.swing.JLabel logOutNavLbl;
    private javax.swing.JPanel logOutNavPnl;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel loginFormPnl;
    private javax.swing.JPanel loginInfoContainerPnl;
    private javax.swing.JPanel loginPagePnl;
    private javax.swing.JLabel loginSideImgLbl;
    private javax.swing.JLabel loginTitleLbl;
    private javax.swing.JLabel logoLbl;
    private javax.swing.JLabel manageVenueIconLbl;
    private javax.swing.JLabel manageVenueNavLbl;
    private javax.swing.JPanel manageVenueNavPnl;
    private javax.swing.JLabel mapIconLbl;
    private javax.swing.JPanel middleContainerNavPnl;
    private javax.swing.JLabel nameErrorMsgLbl;
    private javax.swing.JPanel navigationContainerPnl;
    private javax.swing.JLabel notifyAdminMsgLbl;
    private javax.swing.JLabel optionMessageLbl;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JLabel perPlatePriceDisplayLbl;
    private javax.swing.JLabel perPlatePriceLbl;
    private javax.swing.JLabel phoneIconLbl;
    private javax.swing.JLabel pictureOne;
    private javax.swing.JLabel pictureThree;
    private javax.swing.JLabel pictureTwo;
    private javax.swing.JLabel pictureTwo1;
    private javax.swing.JDialog popUpDialog;
    private javax.swing.JLabel profileLbl;
    private javax.swing.JScrollPane recentDataScrollBr;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton removeVenueDetailsBtn;
    private javax.swing.JButton removeVenueDetailsBtn2;
    private javax.swing.JPanel rendererColumnPnl;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel secondPopUpImage;
    private javax.swing.JRadioButton selectDarkModeRadioBtn;
    private javax.swing.JRadioButton selectLightModeRadioBtn;
    private javax.swing.JLabel settingIconLbl;
    private javax.swing.JLabel settingNavLbl;
    private javax.swing.JPanel settingNavPnl;
    private javax.swing.JPanel settingPagePnl;
    private javax.swing.JLabel showCapacityValueLbl;
    private javax.swing.JPanel showEmployeePnl;
    private javax.swing.JLabel showPerPlatePriceValueLbl;
    private javax.swing.JCheckBox showPwdCheckBx;
    private javax.swing.JLabel sloganLbl;
    private javax.swing.ButtonGroup sortButtonGroup;
    private javax.swing.JComboBox<String> sortByComboBx;
    private javax.swing.JLabel speakToTeamLbl;
    private javax.swing.JLabel thirdPopUpImage;
    private javax.swing.JLabel timeToContactLbl;
    private javax.swing.JLabel titleforDisplayTable;
    private javax.swing.JPanel topContainerNavPnl;
    private javax.swing.JLabel totalCapacityLbl;
    private javax.swing.JLabel totalRevenueLbl;
    private javax.swing.JLabel totalRevenueNumberLbl;
    private javax.swing.JPanel totalRevenuePnl;
    private javax.swing.JLabel totalVenueLbl;
    private javax.swing.JLabel totalVenueNumberLbl;
    private javax.swing.JPanel totalVenuePnl;
    private javax.swing.JButton updateVenueDetailsBtn;
    private javax.swing.JLabel usernameLbl;
    private javax.swing.JTextField venueAddressOnPopUpMsgFld;
    private javax.swing.JTextField venueContactOnPopUpMsgFld;
    private javax.swing.JLabel venueGalleryIconLbl;
    private javax.swing.JLabel venueGalleryNavLbl;
    private javax.swing.JPanel venueGalleryNavPnl;
    private javax.swing.JPanel venueGalleryPagePnl;
    private javax.swing.JTextField venueIdOnPopUpMsgFld;
    private javax.swing.JTable venueModifyTbl;
    private javax.swing.JTextField venueNameOnPopUpMsgFld;
    private javax.swing.JPanel venuePictureCollectionPnl;
    private javax.swing.JLabel visitOfficeHqLbl;
    private javax.swing.JLabel visitUsLbl;
    private javax.swing.JPanel visitUsPnl;
    private javax.swing.JPanel welcomeDisplayPnl;
    // End of variables declaration//GEN-END:variables
}
