/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.knotspot.view;

import com.knotspot.controller.ValidationUtil;
import java.awt.CardLayout;
import javax.swing.ImageIcon;
import javax.swing.table.JTableHeader;
import java.awt.Font;
import java.awt.Color;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.SwingConstants;

import com.knotspot.model.VenueModel;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LMU ID: 23048598 COLLEGE ID: 230024 ErikaShrestha
 */
public class KnotSpot extends javax.swing.JFrame {

    private CardLayout cardLayout;
    private CardLayout cardLayoutForadminDashboard;
    private final String absolutePathForImage = "C:/Users/eerii\\OneDrive - islingtoncollege.edu.np\\CWs\\KnotSpot\\src\\com\\knotspot\\resource\\";

    private List<VenueModel> venueDetails;
    private DefaultTableModel defaultTableModel;

    /**
     * Creates new form knotSpotInterface
     */
    public KnotSpot() {
        initComponents();
        this.setLocation(0,0);
        startProgress();
        venueModifyTbl.getColumnModel().getColumn(8).setCellRenderer(new TableActionCellRenderer(actionColumnPnl));
        venueModifyTbl.getColumnModel().getColumn(8).setCellEditor(new TableActionCellEditor(actionColumnPnl));
        venueDetails = new LinkedList<>();
        defaultTableModel = (DefaultTableModel) venueModifyTbl.getModel();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        actionColumnPnl = new javax.swing.JPanel();
        editVenueDetailsBtn = new javax.swing.JButton();
        removeVenueDetailsBtn = new javax.swing.JButton();
        viewVenueDetailsBtn = new javax.swing.JButton();
        containerPnl = new javax.swing.JPanel();
        loadingPagePnl = new javax.swing.JPanel();
        loadingSymbolLbl = new javax.swing.JLabel();
        loadingValueLbl = new javax.swing.JLabel();
        loadingPagePrgBar = new javax.swing.JProgressBar();
        loadingPageBackgroundLbl = new javax.swing.JLabel();
        loginPagePnl = new javax.swing.JPanel();
        loginFormPnl = new javax.swing.JPanel();
        inputUsernameTxtFld = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        inputPasswordPwdFld = new javax.swing.JPasswordField();
        usernameLoginErrorTxtFld = new javax.swing.JLabel();
        passwordLoginErrorTxtFld = new javax.swing.JLabel();
        showPwdCheckBx = new javax.swing.JCheckBox();
        usernameLbl = new javax.swing.JLabel();
        passwordLbl = new javax.swing.JLabel();
        loginPageBackgroundLbl = new javax.swing.JLabel();
        adminDashboardPagePnl = new javax.swing.JPanel();
        navigationContainerPnl = new javax.swing.JPanel();
        manageVenueNavPnl = new javax.swing.JPanel();
        manageVenueNavLbl = new javax.swing.JLabel();
        aboutUsNavPnl = new javax.swing.JPanel();
        aboutUsNavLbl = new javax.swing.JLabel();
        venueGalleryNavPnl = new javax.swing.JPanel();
        venueGalleryNavLbl = new javax.swing.JLabel();
        settingNavPnl = new javax.swing.JPanel();
        settingNavLbl = new javax.swing.JLabel();
        logOutNavPnl = new javax.swing.JPanel();
        logOutNavLbl = new javax.swing.JLabel();
        adminDashboardPagesPnl = new javax.swing.JPanel();
        homePagePnl = new javax.swing.JPanel();
        adminWelcomeMsgLbl = new javax.swing.JLabel();
        notifyAdminMsgLbl = new javax.swing.JLabel();
        recentDataScrollBr = new javax.swing.JScrollPane();
        frontDisplayTable = new javax.swing.JTable();
        addVenuePagePnl = new javax.swing.JPanel();
        inputVenueNameTxtFld = new javax.swing.JTextField();
        inputPerPlatePriceSlider = new javax.swing.JSlider();
        inputVenueCapacitySlider = new javax.swing.JSlider();
        inputVenueCityComboBx = new javax.swing.JComboBox<>();
        informationToInputVenueLbl = new javax.swing.JLabel();
        inputVenueTypeComboBx = new javax.swing.JComboBox<>();
        inputVenueAddressTxtFld = new javax.swing.JTextField();
        totalCapacityLbl = new javax.swing.JLabel();
        perPlatePriceLbl = new javax.swing.JLabel();
        addVenueBtn = new javax.swing.JButton();
        inputVenueIdTxtFld = new javax.swing.JTextField();
        inputVenueContactTxtFld = new javax.swing.JTextField();
        contactErrorMsgLbl = new javax.swing.JLabel();
        idErrorMsgLbl = new javax.swing.JLabel();
        nameErrorMsgLbl = new javax.swing.JLabel();
        addressErrorMsgLbl = new javax.swing.JLabel();
        insertDataTableScrlPane = new javax.swing.JScrollPane();
        venueModifyTbl = new javax.swing.JTable();
        settingPagePnl = new javax.swing.JPanel();
        backgroundModeSptPane = new javax.swing.JSplitPane();
        darkModePnl = new javax.swing.JPanel();
        darkImageLbl = new javax.swing.JLabel();
        darkModeWelcomeLbl = new javax.swing.JLabel();
        selectDarkModeRadioBtn = new javax.swing.JRadioButton();
        lightModePnl = new javax.swing.JPanel();
        lightImageLbl = new javax.swing.JLabel();
        lightModeWelcomeLbl = new javax.swing.JLabel();
        selectLightModeRadioBtn = new javax.swing.JRadioButton();
        optionMessageLbl = new javax.swing.JLabel();

        actionColumnPnl.setBackground(new java.awt.Color(255, 255, 255));

        editVenueDetailsBtn.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        editVenueDetailsBtn.setText("E");
        editVenueDetailsBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editVenueDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editVenueDetailsBtnActionPerformed(evt);
            }
        });

        removeVenueDetailsBtn.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        removeVenueDetailsBtn.setText("R");
        removeVenueDetailsBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        removeVenueDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVenueDetailsBtnActionPerformed(evt);
            }
        });

        viewVenueDetailsBtn.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        viewVenueDetailsBtn.setText("V");
        viewVenueDetailsBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout actionColumnPnlLayout = new javax.swing.GroupLayout(actionColumnPnl);
        actionColumnPnl.setLayout(actionColumnPnlLayout);
        actionColumnPnlLayout.setHorizontalGroup(
            actionColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionColumnPnlLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(editVenueDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeVenueDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewVenueDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        actionColumnPnlLayout.setVerticalGroup(
            actionColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actionColumnPnlLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(actionColumnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editVenueDetailsBtn)
                    .addComponent(removeVenueDetailsBtn)
                    .addComponent(viewVenueDetailsBtn)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("23048598ErikaShrestha");
        setMinimumSize(new java.awt.Dimension(1280, 800));
        setName("frame"); // NOI18N
        setResizable(false);

        containerPnl.setBackground(new java.awt.Color(255, 255, 255));
        containerPnl.setMaximumSize(new java.awt.Dimension(1280, 800));
        containerPnl.setMinimumSize(new java.awt.Dimension(1280, 800));
        containerPnl.setPreferredSize(new java.awt.Dimension(1280, 800));
        containerPnl.setLayout(new java.awt.CardLayout());

        loadingPagePnl.setBackground(new java.awt.Color(255, 255, 255));
        loadingPagePnl.setMaximumSize(new java.awt.Dimension(1088, 700));
        loadingPagePnl.setMinimumSize(new java.awt.Dimension(1088, 700));
        loadingPagePnl.setPreferredSize(new java.awt.Dimension(1088, 700));
        loadingPagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loadingSymbolLbl.setFont(new java.awt.Font("Sans Serif Collection", 0, 18)); // NOI18N
        loadingSymbolLbl.setText("starting request....");
        loadingPagePnl.add(loadingSymbolLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 700, 160, -1));

        loadingValueLbl.setFont(new java.awt.Font("Sans Serif Collection", 0, 18)); // NOI18N
        loadingValueLbl.setText("0%");
        loadingPagePnl.add(loadingValueLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 700, -1, -1));
        loadingPagePnl.add(loadingPagePrgBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 750, 1280, 20));

        loadingPageBackgroundLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/knotspot/resource/loginimage.jpg"))); // NOI18N
        loadingPageBackgroundLbl.setMaximumSize(new java.awt.Dimension(1280, 800));
        loadingPageBackgroundLbl.setMinimumSize(new java.awt.Dimension(1280, 800));
        loadingPageBackgroundLbl.setPreferredSize(new java.awt.Dimension(1280, 800));
        loadingPagePnl.add(loadingPageBackgroundLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 780));

        containerPnl.add(loadingPagePnl, "LoadingScreen");

        loginPagePnl.setBackground(new java.awt.Color(204, 204, 204));
        loginPagePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputUsernameTxtFld.setBorder(null);
        inputUsernameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputUsernameTxtFldActionPerformed(evt);
            }
        });

        loginBtn.setText("LOG IN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        inputPasswordPwdFld.setBorder(null);
        inputPasswordPwdFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPasswordPwdFldActionPerformed(evt);
            }
        });

        usernameLoginErrorTxtFld.setBackground(new java.awt.Color(0, 0, 0, 80));
        usernameLoginErrorTxtFld.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usernameLoginErrorTxtFldMouseEntered(evt);
            }
        });

        showPwdCheckBx.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N
        showPwdCheckBx.setText("show password");
        showPwdCheckBx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPwdCheckBxActionPerformed(evt);
            }
        });

        usernameLbl.setText("USERNAME:");

        passwordLbl.setText("PASSWORD:");

        javax.swing.GroupLayout loginFormPnlLayout = new javax.swing.GroupLayout(loginFormPnl);
        loginFormPnl.setLayout(loginFormPnlLayout);
        loginFormPnlLayout.setHorizontalGroup(
            loginFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginFormPnlLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(loginFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginFormPnlLayout.createSequentialGroup()
                        .addGroup(loginFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(loginFormPnlLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(loginFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameLbl)
                                    .addComponent(inputUsernameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernameLoginErrorTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(passwordLbl))
                        .addContainerGap(87, Short.MAX_VALUE))
                    .addGroup(loginFormPnlLayout.createSequentialGroup()
                        .addGroup(loginFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showPwdCheckBx, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(loginFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(inputPasswordPwdFld, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(passwordLoginErrorTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(loginFormPnlLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(loginBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginFormPnlLayout.setVerticalGroup(
            loginFormPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginFormPnlLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(usernameLbl)
                .addGap(18, 18, 18)
                .addComponent(inputUsernameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(usernameLoginErrorTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(passwordLbl)
                .addGap(17, 17, 17)
                .addComponent(inputPasswordPwdFld, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordLoginErrorTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showPwdCheckBx)
                .addGap(34, 34, 34)
                .addComponent(loginBtn)
                .addGap(24, 24, 24))
        );

        loginPagePnl.add(loginFormPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 200, 420, 390));
        loginPagePnl.add(loginPageBackgroundLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 10, 1280, 774));

        containerPnl.add(loginPagePnl, "LoginScreen");

        navigationContainerPnl.setBackground(new java.awt.Color(0, 0, 0));
        navigationContainerPnl.setMaximumSize(new java.awt.Dimension(300, 800));
        navigationContainerPnl.setMinimumSize(new java.awt.Dimension(300, 800));
        navigationContainerPnl.setPreferredSize(new java.awt.Dimension(300, 800));

        manageVenueNavPnl.setBackground(new java.awt.Color(0, 0, 0));
        manageVenueNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        manageVenueNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manageVenueNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                manageVenueNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                manageVenueNavPnlMouseExited(evt);
            }
        });

        manageVenueNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        manageVenueNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        manageVenueNavLbl.setText("  Manage Venues");

        javax.swing.GroupLayout manageVenueNavPnlLayout = new javax.swing.GroupLayout(manageVenueNavPnl);
        manageVenueNavPnl.setLayout(manageVenueNavPnlLayout);
        manageVenueNavPnlLayout.setHorizontalGroup(
            manageVenueNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manageVenueNavPnlLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(manageVenueNavLbl)
                .addGap(101, 101, 101))
        );
        manageVenueNavPnlLayout.setVerticalGroup(
            manageVenueNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageVenueNavPnlLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(manageVenueNavLbl)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        aboutUsNavPnl.setBackground(new java.awt.Color(0, 0, 0));
        aboutUsNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        aboutUsNavPnl.setPreferredSize(new java.awt.Dimension(115, 37));

        aboutUsNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        aboutUsNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        aboutUsNavLbl.setText("  about us");
        aboutUsNavLbl.setAutoscrolls(true);

        javax.swing.GroupLayout aboutUsNavPnlLayout = new javax.swing.GroupLayout(aboutUsNavPnl);
        aboutUsNavPnl.setLayout(aboutUsNavPnlLayout);
        aboutUsNavPnlLayout.setHorizontalGroup(
            aboutUsNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutUsNavPnlLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(aboutUsNavLbl)
                .addGap(28, 28, 28))
        );
        aboutUsNavPnlLayout.setVerticalGroup(
            aboutUsNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutUsNavPnlLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(aboutUsNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        venueGalleryNavPnl.setBackground(new java.awt.Color(0, 0, 0));
        venueGalleryNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        venueGalleryNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        venueGalleryNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        venueGalleryNavLbl.setText("Venue Gallery");
        venueGalleryNavLbl.setAutoscrolls(true);

        javax.swing.GroupLayout venueGalleryNavPnlLayout = new javax.swing.GroupLayout(venueGalleryNavPnl);
        venueGalleryNavPnl.setLayout(venueGalleryNavPnlLayout);
        venueGalleryNavPnlLayout.setHorizontalGroup(
            venueGalleryNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, venueGalleryNavPnlLayout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .addComponent(venueGalleryNavLbl)
                .addGap(14, 14, 14))
        );
        venueGalleryNavPnlLayout.setVerticalGroup(
            venueGalleryNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, venueGalleryNavPnlLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(venueGalleryNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        settingNavPnl.setBackground(new java.awt.Color(0, 0, 0));
        settingNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        settingNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingNavPnlMouseExited(evt);
            }
        });

        settingNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        settingNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        settingNavLbl.setText("  Settings");
        settingNavLbl.setAutoscrolls(true);

        javax.swing.GroupLayout settingNavPnlLayout = new javax.swing.GroupLayout(settingNavPnl);
        settingNavPnl.setLayout(settingNavPnlLayout);
        settingNavPnlLayout.setHorizontalGroup(
            settingNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingNavPnlLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(settingNavLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        settingNavPnlLayout.setVerticalGroup(
            settingNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingNavPnlLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(settingNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        logOutNavPnl.setBackground(new java.awt.Color(0, 0, 0));
        logOutNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        logOutNavPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutNavPnlMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutNavPnlMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutNavPnlMouseExited(evt);
            }
        });

        logOutNavLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 10)); // NOI18N
        logOutNavLbl.setForeground(new java.awt.Color(255, 255, 255));
        logOutNavLbl.setText("Log Out");
        logOutNavLbl.setAutoscrolls(true);

        javax.swing.GroupLayout logOutNavPnlLayout = new javax.swing.GroupLayout(logOutNavPnl);
        logOutNavPnl.setLayout(logOutNavPnlLayout);
        logOutNavPnlLayout.setHorizontalGroup(
            logOutNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logOutNavPnlLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(logOutNavLbl)
                .addContainerGap(132, Short.MAX_VALUE))
        );
        logOutNavPnlLayout.setVerticalGroup(
            logOutNavPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logOutNavPnlLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(logOutNavLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        adminDashboardPagesPnl.setBackground(new java.awt.Color(255, 255, 255));
        adminDashboardPagesPnl.setLayout(new java.awt.CardLayout());

        homePagePnl.setBackground(new java.awt.Color(255, 255, 255));

        adminWelcomeMsgLbl.setFont(new java.awt.Font("Sans Serif Collection", 1, 18)); // NOI18N
        adminWelcomeMsgLbl.setText("Welcome Aamir!");

        notifyAdminMsgLbl.setFont(new java.awt.Font("Sans Serif Collection", 0, 15)); // NOI18N
        notifyAdminMsgLbl.setText("All system are running smoothly.");

        DefaultTableCellRenderer headerRender = new DefaultTableCellRenderer();
        headerRender.setBackground(Color.decode("#002147"));
        headerRender.setForeground(Color.decode("#FFFFFF"));
        headerRender.setHorizontalAlignment(SwingConstants.CENTER);
        JTableHeader tableHeader = frontDisplayTable.getTableHeader();
        tableHeader.setFont(new Font("Sans Serif", Font.BOLD, 8));
        tableHeader.setOpaque(false);
        tableHeader.setDefaultRenderer(headerRender);
        frontDisplayTable.setFont(new java.awt.Font("Sans Serif Collection", 0, 8)); // NOI18N
        frontDisplayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "address", "city", "contact", "type", "capacity", "rent fee"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        frontDisplayTable.setFocusable(false);
        frontDisplayTable.setRowHeight(25);
        frontDisplayTable.setSelectionBackground(new java.awt.Color(153, 153, 153));
        frontDisplayTable.setShowHorizontalLines(true);
        frontDisplayTable.getTableHeader().setReorderingAllowed(false);
        recentDataScrollBr.setViewportView(frontDisplayTable);

        javax.swing.GroupLayout homePagePnlLayout = new javax.swing.GroupLayout(homePagePnl);
        homePagePnl.setLayout(homePagePnlLayout);
        homePagePnlLayout.setHorizontalGroup(
            homePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePagePnlLayout.createSequentialGroup()
                .addGroup(homePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePagePnlLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(homePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notifyAdminMsgLbl)
                            .addComponent(adminWelcomeMsgLbl)))
                    .addGroup(homePagePnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(recentDataScrollBr, javax.swing.GroupLayout.PREFERRED_SIZE, 1031, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homePagePnlLayout.setVerticalGroup(
            homePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePagePnlLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(adminWelcomeMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notifyAdminMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214)
                .addComponent(recentDataScrollBr, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        adminDashboardPagesPnl.add(homePagePnl, "HomePage");

        inputVenueNameTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Venue Name"));
        inputVenueNameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueNameTxtFldActionPerformed(evt);
            }
        });

        inputPerPlatePriceSlider.setMaximum(200);
        inputPerPlatePriceSlider.setPaintLabels(true);
        inputPerPlatePriceSlider.setMajorTickSpacing(50);
        inputPerPlatePriceSlider.setMinorTickSpacing(5);
        inputPerPlatePriceSlider.setPaintTicks(true);

        inputVenueCapacitySlider.setPaintLabels(true);
        inputVenueCapacitySlider.setMajorTickSpacing(50);
        inputVenueCapacitySlider.setMinorTickSpacing(5);
        inputVenueCapacitySlider.setPaintTicks(true);

        inputVenueCityComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kathmandu", "bhaktapur", "Dharan", "Koteshwor" }));
        inputVenueCityComboBx.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "City"));

        informationToInputVenueLbl.setText("Input Venue Details");

        inputVenueTypeComboBx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Meeting Conference", "Hall" }));
        inputVenueTypeComboBx.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Type"));

        inputVenueAddressTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Address"));
        inputVenueAddressTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueAddressTxtFldActionPerformed(evt);
            }
        });

        totalCapacityLbl.setText("Total Capacity :");

        perPlatePriceLbl.setText("Per Plate Price:");

        addVenueBtn.setText("ADD");
        addVenueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVenueBtnActionPerformed(evt);
            }
        });

        inputVenueIdTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), "Venue ID"));
        inputVenueIdTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueIdTxtFldActionPerformed(evt);
            }
        });

        inputVenueContactTxtFld.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Contact No"));
        inputVenueContactTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVenueContactTxtFldActionPerformed(evt);
            }
        });

        contactErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        idErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        nameErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        addressErrorMsgLbl.setFont(new java.awt.Font("Segoe UI", 0, 8)); // NOI18N

        DefaultTableCellRenderer headerRenderForVenueTable = new DefaultTableCellRenderer();
        headerRenderForVenueTable.setBackground(Color.decode("#002147"));
        headerRenderForVenueTable.setForeground(Color.decode("#FFFFFF"));
        headerRenderForVenueTable.setHorizontalAlignment(SwingConstants.CENTER);
        JTableHeader venuetableHeader = venueModifyTbl.getTableHeader();
        venuetableHeader.setFont(new Font("Sans Serif", Font.BOLD, 8));
        venuetableHeader.setOpaque(false);
        venuetableHeader.setDefaultRenderer(headerRenderForVenueTable);
        venueModifyTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Address", "City", "Contact", "Type", "Capacity", "Rent Fee", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        venueModifyTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        venueModifyTbl.setShowHorizontalLines(true);
        insertDataTableScrlPane.setViewportView(venueModifyTbl);
        if (venueModifyTbl.getColumnModel().getColumnCount() > 0) {
            venueModifyTbl.getColumnModel().getColumn(0).setPreferredWidth(40);
            venueModifyTbl.getColumnModel().getColumn(8).setPreferredWidth(80);
        }

        javax.swing.GroupLayout addVenuePagePnlLayout = new javax.swing.GroupLayout(addVenuePagePnl);
        addVenuePagePnl.setLayout(addVenuePagePnlLayout);
        addVenuePagePnlLayout.setHorizontalGroup(
            addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addVenuePagePnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(perPlatePriceLbl)
                            .addComponent(totalCapacityLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueIdTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)))
                .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                        .addComponent(inputPerPlatePriceSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                                .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                                        .addComponent(inputVenueCapacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 128, Short.MAX_VALUE))
                                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                                        .addComponent(nameErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(addressErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(contactErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(inputVenueContactTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(28, 28, 28))
                            .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                                .addComponent(inputVenueNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(inputVenueAddressTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(inputVenueCityComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inputVenueTypeComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(233, 233, 233))))
            .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                .addContainerGap(587, Short.MAX_VALUE)
                .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addVenuePagePnlLayout.createSequentialGroup()
                        .addComponent(informationToInputVenueLbl)
                        .addGap(370, 370, 370))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addVenuePagePnlLayout.createSequentialGroup()
                        .addComponent(addVenueBtn)
                        .addGap(325, 325, 325))))
            .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(insertDataTableScrlPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1012, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        addVenuePagePnlLayout.setVerticalGroup(
            addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(informationToInputVenueLbl)
                .addGap(45, 45, 45)
                .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputVenueIdTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueAddressTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueContactTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueCityComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputVenueTypeComboBx, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contactErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(idErrorMsgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputPerPlatePriceSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(perPlatePriceLbl)))
                    .addGroup(addVenuePagePnlLayout.createSequentialGroup()
                        .addGroup(addVenuePagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputVenueCapacitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalCapacityLbl))
                        .addGap(28, 28, 28)
                        .addComponent(addVenueBtn)))
                .addGap(46, 46, 46)
                .addComponent(insertDataTableScrlPane, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        adminDashboardPagesPnl.add(addVenuePagePnl, "ManageVenuePage");

        darkModePnl.setBackground(new java.awt.Color(51, 51, 51));
        darkModePnl.setMaximumSize(new java.awt.Dimension(150, 150));
        darkModePnl.setMinimumSize(new java.awt.Dimension(150, 150));
        darkModePnl.setPreferredSize(new java.awt.Dimension(150, 150));

        darkImageLbl.setForeground(new java.awt.Color(255, 255, 255));
        darkImageLbl.setText("image");

        darkModeWelcomeLbl.setForeground(new java.awt.Color(255, 255, 255));
        darkModeWelcomeLbl.setText("Welcome Admin!");

        selectDarkModeRadioBtn.setForeground(new java.awt.Color(255, 255, 255));
        selectDarkModeRadioBtn.setText("Dark Mode");

        javax.swing.GroupLayout darkModePnlLayout = new javax.swing.GroupLayout(darkModePnl);
        darkModePnl.setLayout(darkModePnlLayout);
        darkModePnlLayout.setHorizontalGroup(
            darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darkModePnlLayout.createSequentialGroup()
                .addGroup(darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(darkModePnlLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(darkImageLbl))
                    .addGroup(darkModePnlLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectDarkModeRadioBtn)
                            .addComponent(darkModeWelcomeLbl))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        darkModePnlLayout.setVerticalGroup(
            darkModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darkModePnlLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(darkImageLbl)
                .addGap(27, 27, 27)
                .addComponent(darkModeWelcomeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectDarkModeRadioBtn)
                .addGap(40, 40, 40))
        );

        backgroundModeSptPane.setRightComponent(darkModePnl);

        lightModePnl.setBackground(new java.awt.Color(255, 255, 255));
        lightModePnl.setMaximumSize(new java.awt.Dimension(150, 150));
        lightModePnl.setMinimumSize(new java.awt.Dimension(150, 150));
        lightModePnl.setPreferredSize(new java.awt.Dimension(150, 150));

        lightImageLbl.setText("image");

        lightModeWelcomeLbl.setText("Welcome Admin!");

        selectLightModeRadioBtn.setText("Light Mode");

        javax.swing.GroupLayout lightModePnlLayout = new javax.swing.GroupLayout(lightModePnl);
        lightModePnl.setLayout(lightModePnlLayout);
        lightModePnlLayout.setHorizontalGroup(
            lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lightModePnlLayout.createSequentialGroup()
                .addGroup(lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lightModePnlLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(lightImageLbl))
                    .addGroup(lightModePnlLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectLightModeRadioBtn)
                            .addComponent(lightModeWelcomeLbl))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        lightModePnlLayout.setVerticalGroup(
            lightModePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lightModePnlLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lightImageLbl)
                .addGap(28, 28, 28)
                .addComponent(lightModeWelcomeLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectLightModeRadioBtn)
                .addGap(39, 39, 39))
        );

        backgroundModeSptPane.setLeftComponent(lightModePnl);

        optionMessageLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        optionMessageLbl.setText("Please Select the background mode");

        javax.swing.GroupLayout settingPagePnlLayout = new javax.swing.GroupLayout(settingPagePnl);
        settingPagePnl.setLayout(settingPagePnlLayout);
        settingPagePnlLayout.setHorizontalGroup(
            settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingPagePnlLayout.createSequentialGroup()
                .addGap(426, 426, 426)
                .addComponent(optionMessageLbl)
                .addContainerGap(432, Short.MAX_VALUE))
            .addGroup(settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(settingPagePnlLayout.createSequentialGroup()
                    .addGap(377, 377, 377)
                    .addComponent(backgroundModeSptPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(378, Short.MAX_VALUE)))
        );
        settingPagePnlLayout.setVerticalGroup(
            settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingPagePnlLayout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(optionMessageLbl)
                .addContainerGap(508, Short.MAX_VALUE))
            .addGroup(settingPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(settingPagePnlLayout.createSequentialGroup()
                    .addGap(229, 229, 229)
                    .addComponent(backgroundModeSptPane, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(229, Short.MAX_VALUE)))
        );

        adminDashboardPagesPnl.add(settingPagePnl, "SettingPage");

        javax.swing.GroupLayout navigationContainerPnlLayout = new javax.swing.GroupLayout(navigationContainerPnl);
        navigationContainerPnl.setLayout(navigationContainerPnlLayout);
        navigationContainerPnlLayout.setHorizontalGroup(
            navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationContainerPnlLayout.createSequentialGroup()
                .addGroup(navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationContainerPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(venueGalleryNavPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(settingNavPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(logOutNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(manageVenueNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(aboutUsNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(adminDashboardPagesPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        navigationContainerPnlLayout.setVerticalGroup(
            navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationContainerPnlLayout.createSequentialGroup()
                .addContainerGap(93, Short.MAX_VALUE)
                .addGroup(navigationContainerPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navigationContainerPnlLayout.createSequentialGroup()
                        .addComponent(manageVenueNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(aboutUsNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(venueGalleryNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(settingNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(logOutNavPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addComponent(adminDashboardPagesPnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout adminDashboardPagePnlLayout = new javax.swing.GroupLayout(adminDashboardPagePnl);
        adminDashboardPagePnl.setLayout(adminDashboardPagePnlLayout);
        adminDashboardPagePnlLayout.setHorizontalGroup(
            adminDashboardPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navigationContainerPnl, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        adminDashboardPagePnlLayout.setVerticalGroup(
            adminDashboardPagePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminDashboardPagePnlLayout.createSequentialGroup()
                .addComponent(navigationContainerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        containerPnl.add(adminDashboardPagePnl, "AdminScreen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i+=2) {
                    Thread.sleep(40);
                    publish(i);
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                loadingPagePrgBar.setValue(progress);
                loadingValueLbl.setText(progress + "%");
                if (progress == 20) {
                    loadingSymbolLbl.setText("welcome to our system...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture3.png");
                    

                }
                if (progress == 40) {
                    loadingSymbolLbl.setText("10 venues are ready to be booked...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture6.png");
                    

                }
                if (progress == 60) {
                    loadingSymbolLbl.setText("let us join in your new innings...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture1.png");
                    

                }
                if (progress == 80) {
                    loadingSymbolLbl.setText("happy weddings...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture2.png");
                    

                }
                if (progress == 100) {
                    loadingSymbolLbl.setText("Manage stuffs...");
                    ImageIcon icon = new ImageIcon(absolutePathForImage + "picture4.png");
                    

                }
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen");
            }
        };
        worker.execute();
    }
    
    

    private void loadScreen(String screenName) {
        cardLayout = (CardLayout) containerPnl.getLayout();
        cardLayout.show(containerPnl, screenName);
    }

    private void loadNavRelatedPage(String screenName) {
        cardLayoutForadminDashboard = (CardLayout) adminDashboardPagesPnl.getLayout();
        cardLayoutForadminDashboard.show(adminDashboardPagesPnl, screenName);
    }
    
    private void showPopDialog(String message, String title, int messageType){
        JOptionPane.showMessageDialog(this,message, title, messageType);
    }
    
    private void editComboBoxItem(JComboBox comboBox, int selectedRow, int column){
        
        int index = comboBox.getItemCount();
        for (int i = 0; i< index; i++){
            String item= comboBox.getItemAt(i).toString();
            if(venueModifyTbl.getValueAt(selectedRow, column).toString().equals(item)){
            comboBox.setSelectedItem(item);
        }
        }
    }

    private void resetInputDetails(){
        inputVenueIdTxtFld.setText("");
        inputVenueNameTxtFld.setText("");
        inputVenueAddressTxtFld.setText("");
        inputVenueContactTxtFld.setText("");
        inputVenueTypeComboBx.setSelectedItem(inputVenueTypeComboBx.getItemAt(0));
        inputVenueCityComboBx.setSelectedItem(inputVenueCityComboBx.getItemAt(0));
        inputVenueCapacitySlider.setValue(50);
        inputPerPlatePriceSlider.setValue(50);
    }
    
    

    private void inputUsernameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUsernameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputUsernameTxtFldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        
        String username = inputUsernameTxtFld.getText();
        String password = new String(inputPasswordPwdFld.getPassword());
        if (username.isEmpty() && password.isEmpty()) {
            ValidationUtil.authenticationColor(usernameLoginErrorTxtFld, Color.BLACK, Color.RED, true, "Please enter your username");
            ValidationUtil.authenticationColor(passwordLoginErrorTxtFld, Color.BLACK, Color.RED, true, "Please enter your password");
           
        } 
        else{
             loadScreen("AdminScreen");
        }


    }//GEN-LAST:event_loginBtnActionPerformed

    private void inputPasswordPwdFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPasswordPwdFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPasswordPwdFldActionPerformed

    private void inputVenueNameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueNameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueNameTxtFldActionPerformed

    private void inputVenueAddressTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueAddressTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueAddressTxtFldActionPerformed

    private void manageVenueNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageVenueNavPnlMouseClicked
        // TODO add your handling code here:
        loadNavRelatedPage("ManageVenuePage");
    }//GEN-LAST:event_manageVenueNavPnlMouseClicked

    private void manageVenueNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageVenueNavPnlMouseEntered
        // TODO add your handling code here:
        manageVenueNavPnl.setBackground(Color.decode("#FFFFFF"));
        manageVenueNavLbl.setBackground(Color.decode("#FFFFFF"));
        manageVenueNavLbl.setForeground(Color.decode("#000000"));
    }//GEN-LAST:event_manageVenueNavPnlMouseEntered

    private void manageVenueNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manageVenueNavPnlMouseExited
        // TODO add your handling code here:
        manageVenueNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        manageVenueNavPnl.setBackground(Color.decode("#000000"));
        manageVenueNavLbl.setBackground(Color.decode("#000000"));
        manageVenueNavLbl.setForeground(Color.decode("#FFFFFF"));
    }//GEN-LAST:event_manageVenueNavPnlMouseExited

    private void settingNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingNavPnlMouseClicked
        // TODO add your handling code here:
        loadNavRelatedPage("SettingPage");
    }//GEN-LAST:event_settingNavPnlMouseClicked

    private void settingNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingNavPnlMouseEntered
        // TODO add your handling code here:
        settingNavPnl.setBackground(Color.decode("#FFFFFF"));
        settingNavPnl.setBackground(Color.decode("#FFFFFF"));
        settingNavLbl.setForeground(Color.decode("#000000"));
    }//GEN-LAST:event_settingNavPnlMouseEntered

    private void settingNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingNavPnlMouseExited
        // TODO add your handling code here:
        settingNavPnl.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        settingNavPnl.setBackground(Color.decode("#000000"));
        settingNavLbl.setBackground(Color.decode("#000000"));
        settingNavLbl.setForeground(Color.decode("#FFFFFF"));
        settingNavPnl.setForeground(Color.decode("#FFFFFF"));
    }//GEN-LAST:event_settingNavPnlMouseExited

    private void logOutNavPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavPnlMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_logOutNavPnlMouseClicked

    private void logOutNavPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavPnlMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_logOutNavPnlMouseEntered

    private void logOutNavPnlMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavPnlMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_logOutNavPnlMouseExited

    private void inputVenueIdTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueIdTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueIdTxtFldActionPerformed

    private void addVenueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVenueBtnActionPerformed
        // TODO add your handling code here:
        int venueId = 0;
        String venueName = null;
        String venueAddress = null;
        String venueCity = String.valueOf(inputVenueCityComboBx.getSelectedItem());
        String venueContactNumber = null;
        String venueType = String.valueOf(inputVenueTypeComboBx.getSelectedItem());
        int venueCapacity = inputVenueCapacitySlider.getValue();
        int perPlatePrice = inputPerPlatePriceSlider.getValue();
        int venueRentFee = venueCapacity * perPlatePrice;

        boolean isValid = true;

        try {
            ValidationUtil.isIdValid(inputVenueIdTxtFld.getText(), "Venue Id");
            venueId = Integer.parseInt(inputVenueIdTxtFld.getText());
            ValidationUtil.venueValidateColor(inputVenueIdTxtFld, idErrorMsgLbl, Color.WHITE,Color.BLACK, "", "Venue Id");
        } catch (NullPointerException | NumberFormatException | IndexOutOfBoundsException e) {
            ValidationUtil.venueValidateColor(inputVenueIdTxtFld, idErrorMsgLbl, Color.RED, Color.RED,e.getMessage(), "Venue Id");
            isValid = false; //exception
        }

        try {
            ValidationUtil.isNameValid(inputVenueNameTxtFld.getText(), "Venue name");
            venueName = inputVenueNameTxtFld.getText();
            ValidationUtil.venueValidateColor(inputVenueNameTxtFld, nameErrorMsgLbl, Color.WHITE,Color.BLACK, "", "Venue Name");
        } catch (NullPointerException | NumberFormatException e) {
            ValidationUtil.venueValidateColor(inputVenueNameTxtFld, nameErrorMsgLbl, Color.RED, Color.RED,e.getMessage(), "Venue Name");
            isValid = false; //exception
        }

        try {
            ValidationUtil.isAddressValid(inputVenueAddressTxtFld.getText(), "Venue address");
            venueAddress = inputVenueAddressTxtFld.getText();
            ValidationUtil.venueValidateColor(inputVenueAddressTxtFld, addressErrorMsgLbl, Color.WHITE, Color.BLACK,"", "Venue address");
        } catch (NullPointerException | NumberFormatException e) {
            ValidationUtil.venueValidateColor(inputVenueAddressTxtFld, addressErrorMsgLbl, Color.RED, Color.RED,e.getMessage(), "Venue address");
            isValid = false; //exception
        }

        try {
            ValidationUtil.isContactValid(inputVenueContactTxtFld.getText(), "Venue contact number");
            venueContactNumber = inputVenueContactTxtFld.getText();
            ValidationUtil.venueValidateColor(inputVenueContactTxtFld, contactErrorMsgLbl, Color.WHITE, Color.BLACK,"", "Venue contact");
        } catch (NullPointerException | NumberFormatException e) {
            ValidationUtil.venueValidateColor(inputVenueContactTxtFld, contactErrorMsgLbl, Color.RED, Color.RED,e.getMessage(), "Venue contact");
            isValid = false; //exception
        }

        if (isValid) {
            //to check if the details are repeated to add 
            if (!ValidationUtil.isDuplicate(venueDetails, venueId, venueContactNumber)) {
                VenueModel venue = new VenueModel(venueId, venueName, venueAddress, venueCity, venueContactNumber, venueType, venueCapacity, venueRentFee);
                venueDetails.add(venue);
                //load data to table
                defaultTableModel.addRow(new Object[]{venueId, venueName, venueAddress, venueCity, venueContactNumber, venueType, venueCapacity, venueRentFee});
                showPopDialog("The venue is added successfully", "New Venue Entry", JOptionPane.INFORMATION_MESSAGE);
                resetInputDetails();

            } else {
                showPopDialog("The same venue cannot be duplicated", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
                resetInputDetails();
            }

        }


    }//GEN-LAST:event_addVenueBtnActionPerformed

    private void inputVenueContactTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVenueContactTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVenueContactTxtFldActionPerformed

    private void showPwdCheckBxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPwdCheckBxActionPerformed
        // TODO add your handling code here:
        if(showPwdCheckBx.isSelected()){
            inputPasswordPwdFld.setEchoChar((char)0);
        }
        else{
            inputPasswordPwdFld.setEchoChar('*');
        }
    }//GEN-LAST:event_showPwdCheckBxActionPerformed

    private void usernameLoginErrorTxtFldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameLoginErrorTxtFldMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameLoginErrorTxtFldMouseEntered

    private void editVenueDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editVenueDetailsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = venueModifyTbl.getSelectedRow();
        if(selectedRow>=0 && venueModifyTbl.getSelectedRowCount()==1){
            inputVenueIdTxtFld.setText(venueModifyTbl.getValueAt(selectedRow, 0).toString());
            inputVenueIdTxtFld.setEditable(false);
            inputVenueNameTxtFld.setText(venueModifyTbl.getValueAt(selectedRow, 1).toString());
            inputVenueAddressTxtFld.setText(venueModifyTbl.getValueAt(selectedRow, 2).toString());
            editComboBoxItem(inputVenueCityComboBx, selectedRow, 3);
            inputVenueContactTxtFld.setText(venueModifyTbl.getValueAt(selectedRow, 4).toString());
            editComboBoxItem(inputVenueTypeComboBx, selectedRow, 5);
            inputVenueCapacitySlider.setValue(Integer.parseInt(venueModifyTbl.getValueAt(selectedRow,6).toString()));
            
        }
    }//GEN-LAST:event_editVenueDetailsBtnActionPerformed

    private void removeVenueDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVenueDetailsBtnActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this,"Do you want to really remove the venue?", "Remove venue confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(response==JOptionPane.YES_OPTION){
            int venueIdColumn= 0;
            int selectedRow = venueModifyTbl.getSelectedRow();
            
            if(selectedRow>=0){
                int selectedRowVenueId = Integer.parseInt(defaultTableModel.getValueAt(selectedRow, venueIdColumn).toString());
                defaultTableModel.removeRow(selectedRow);
                
                for(VenueModel venues : venueDetails){
                    if(venues.getVenueId()==selectedRowVenueId){
                        venueDetails.remove(venues);
                        return;
                    }
                }
            
            }
        
        }
    }//GEN-LAST:event_removeVenueDetailsBtnActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KnotSpot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KnotSpot().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboutUsNavLbl;
    private javax.swing.JPanel aboutUsNavPnl;
    private javax.swing.JPanel actionColumnPnl;
    private javax.swing.JButton addVenueBtn;
    private javax.swing.JPanel addVenuePagePnl;
    private javax.swing.JLabel addressErrorMsgLbl;
    private javax.swing.JPanel adminDashboardPagePnl;
    private javax.swing.JPanel adminDashboardPagesPnl;
    private javax.swing.JLabel adminWelcomeMsgLbl;
    private javax.swing.JSplitPane backgroundModeSptPane;
    private javax.swing.JLabel contactErrorMsgLbl;
    private javax.swing.JPanel containerPnl;
    private javax.swing.JLabel darkImageLbl;
    private javax.swing.JPanel darkModePnl;
    private javax.swing.JLabel darkModeWelcomeLbl;
    private javax.swing.JButton editVenueDetailsBtn;
    private javax.swing.JTable frontDisplayTable;
    private javax.swing.JPanel homePagePnl;
    private javax.swing.JLabel idErrorMsgLbl;
    private javax.swing.JLabel informationToInputVenueLbl;
    private javax.swing.JPasswordField inputPasswordPwdFld;
    private javax.swing.JSlider inputPerPlatePriceSlider;
    private javax.swing.JTextField inputUsernameTxtFld;
    private javax.swing.JTextField inputVenueAddressTxtFld;
    private javax.swing.JSlider inputVenueCapacitySlider;
    private javax.swing.JComboBox<String> inputVenueCityComboBx;
    private javax.swing.JTextField inputVenueContactTxtFld;
    private javax.swing.JTextField inputVenueIdTxtFld;
    private javax.swing.JTextField inputVenueNameTxtFld;
    private javax.swing.JComboBox<String> inputVenueTypeComboBx;
    private javax.swing.JScrollPane insertDataTableScrlPane;
    private javax.swing.JLabel lightImageLbl;
    private javax.swing.JPanel lightModePnl;
    private javax.swing.JLabel lightModeWelcomeLbl;
    private javax.swing.JLabel loadingPageBackgroundLbl;
    private javax.swing.JPanel loadingPagePnl;
    private javax.swing.JProgressBar loadingPagePrgBar;
    private javax.swing.JLabel loadingSymbolLbl;
    private javax.swing.JLabel loadingValueLbl;
    private javax.swing.JLabel logOutNavLbl;
    private javax.swing.JPanel logOutNavPnl;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel loginFormPnl;
    private javax.swing.JLabel loginPageBackgroundLbl;
    private javax.swing.JPanel loginPagePnl;
    private javax.swing.JLabel manageVenueNavLbl;
    private javax.swing.JPanel manageVenueNavPnl;
    private javax.swing.JLabel nameErrorMsgLbl;
    private javax.swing.JPanel navigationContainerPnl;
    private javax.swing.JLabel notifyAdminMsgLbl;
    private javax.swing.JLabel optionMessageLbl;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JLabel passwordLoginErrorTxtFld;
    private javax.swing.JLabel perPlatePriceLbl;
    private javax.swing.JScrollPane recentDataScrollBr;
    private javax.swing.JButton removeVenueDetailsBtn;
    private javax.swing.JRadioButton selectDarkModeRadioBtn;
    private javax.swing.JRadioButton selectLightModeRadioBtn;
    private javax.swing.JLabel settingNavLbl;
    private javax.swing.JPanel settingNavPnl;
    private javax.swing.JPanel settingPagePnl;
    private javax.swing.JCheckBox showPwdCheckBx;
    private javax.swing.JLabel totalCapacityLbl;
    private javax.swing.JLabel usernameLbl;
    private javax.swing.JLabel usernameLoginErrorTxtFld;
    private javax.swing.JLabel venueGalleryNavLbl;
    private javax.swing.JPanel venueGalleryNavPnl;
    private javax.swing.JTable venueModifyTbl;
    private javax.swing.JButton viewVenueDetailsBtn;
    // End of variables declaration//GEN-END:variables
}
